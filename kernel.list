
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	e3a0d902 	mov	sp, #32768	@ 0x8000
    8004:	eb000000 	bl	800c <stack_init>
    8008:	ea00099a 	b	a678 <main>

0000800c <stack_init>:
    800c:	e3a000db 	mov	r0, #219	@ 0xdb
    8010:	e129f000 	msr	CPSR_fc, r0
    8014:	e59fd038 	ldr	sp, [pc, #56]	@ 8054 <TAG_SET_CURSOR_INFO+0x43>
    8018:	e3a000d7 	mov	r0, #215	@ 0xd7
    801c:	e129f000 	msr	CPSR_fc, r0
    8020:	e59fd030 	ldr	sp, [pc, #48]	@ 8058 <TAG_SET_CURSOR_INFO+0x47>
    8024:	e3a000d1 	mov	r0, #209	@ 0xd1
    8028:	e129f000 	msr	CPSR_fc, r0
    802c:	e59fd028 	ldr	sp, [pc, #40]	@ 805c <TAG_SET_CURSOR_INFO+0x4b>
    8030:	e3a000d2 	mov	r0, #210	@ 0xd2
    8034:	e129f000 	msr	CPSR_fc, r0
    8038:	e59fd020 	ldr	sp, [pc, #32]	@ 8060 <TAG_SET_CURSOR_INFO+0x4f>
    803c:	e3a000df 	mov	r0, #223	@ 0xdf
    8040:	e129f000 	msr	CPSR_fc, r0
    8044:	e59fd018 	ldr	sp, [pc, #24]	@ 8064 <TAG_SET_CURSOR_INFO+0x53>
    8048:	e3a000d3 	mov	r0, #211	@ 0xd3
    804c:	e129f000 	msr	CPSR_fc, r0
    8050:	e12fff1e 	bx	lr
    8054:	00008468 	.word	0x00008468
    8058:	00008868 	.word	0x00008868
    805c:	00009068 	.word	0x00009068
    8060:	00008c68 	.word	0x00008c68
    8064:	00009468 	.word	0x00009468

Disassembly of section .text:

00009468 <utils_switchRegisters>:
    9468:	e0200001 	eor	r0, r0, r1
    946c:	e0211000 	eor	r1, r1, r0
    9470:	e0200001 	eor	r0, r0, r1
    9474:	e1a0f00e 	mov	pc, lr

00009478 <utils_delay>:
    9478:	e2500001 	subs	r0, r0, #1
    947c:	1afffffd 	bne	9478 <utils_delay>
    9480:	e12fff1e 	bx	lr

00009484 <math_s32_abs>:
    9484:	e3500000 	cmp	r0, #0
    9488:	b0401000 	sublt	r1, r0, r0
    948c:	b0410000 	sublt	r0, r1, r0
    9490:	e12fff1e 	bx	lr

00009494 <math_u32_divide>:
    9494:	e3510000 	cmp	r1, #0
    9498:	0a000012 	beq	94e8 <math_u32_divide_error>
    949c:	e1a03000 	mov	r3, r0
    94a0:	e3a00000 	mov	r0, #0
    94a4:	e1530001 	cmp	r3, r1
    94a8:	31a01003 	movcc	r1, r3
    94ac:	312fff1e 	bxcc	lr
    94b0:	e92d4070 	push	{r4, r5, r6, lr}
    94b4:	e3a02001 	mov	r2, #1
    94b8:	e3a04000 	mov	r4, #0
    94bc:	e1a05411 	lsl	r5, r1, r4
    94c0:	e0436005 	sub	r6, r3, r5
    94c4:	e1560005 	cmp	r6, r5
    94c8:	22844001 	addcs	r4, r4, #1
    94cc:	2afffffa 	bcs	94bc <math_u32_divide+0x28>
    94d0:	e1a03006 	mov	r3, r6
    94d4:	e1800412 	orr	r0, r0, r2, lsl r4
    94d8:	e1530001 	cmp	r3, r1
    94dc:	2afffff5 	bcs	94b8 <math_u32_divide+0x24>
    94e0:	e1a01003 	mov	r1, r3
    94e4:	e8bd8070 	pop	{r4, r5, r6, pc}

000094e8 <math_u32_divide_error>:
    94e8:	e3a00000 	mov	r0, #0
    94ec:	e12fff1e 	bx	lr

000094f0 <math_u32_module>:
    94f0:	e3510000 	cmp	r1, #0
    94f4:	0a00000d 	beq	9530 <math_u32_module_error>
    94f8:	e1500001 	cmp	r0, r1
    94fc:	312fff1e 	bxcc	lr
    9500:	e92d4070 	push	{r4, r5, r6, lr}
    9504:	e3a02001 	mov	r2, #1
    9508:	e3a04000 	mov	r4, #0
    950c:	e1a05411 	lsl	r5, r1, r4
    9510:	e0406005 	sub	r6, r0, r5
    9514:	e1560005 	cmp	r6, r5
    9518:	82844001 	addhi	r4, r4, #1
    951c:	8afffffa 	bhi	950c <math_u32_module+0x1c>
    9520:	e1a00006 	mov	r0, r6
    9524:	e1500001 	cmp	r0, r1
    9528:	2afffff6 	bcs	9508 <math_u32_module+0x18>
    952c:	e8bd8070 	pop	{r4, r5, r6, pc}

00009530 <math_u32_module_error>:
    9530:	e3a00000 	mov	r0, #0
    9534:	e12fff1e 	bx	lr

00009538 <math_s32_divide>:
    9538:	e92d4010 	push	{r4, lr}
    953c:	e3510000 	cmp	r1, #0
    9540:	0a00000d 	beq	957c <math_s32_divide_error>
    9544:	e1a03fc0 	asr	r3, r0, #31
    9548:	e0204003 	eor	r4, r0, r3
    954c:	e0444003 	sub	r4, r4, r3
    9550:	e1a02fc1 	asr	r2, r1, #31
    9554:	e0213002 	eor	r3, r1, r2
    9558:	e0433002 	sub	r3, r3, r2
    955c:	e1a00004 	mov	r0, r4
    9560:	e1a01003 	mov	r1, r3
    9564:	ebffffca 	bl	9494 <math_u32_divide>
    9568:	e0202fc4 	eor	r2, r0, r4, asr #31
    956c:	42600000 	rsbmi	r0, r0, #0
    9570:	e0212fc4 	eor	r2, r1, r4, asr #31
    9574:	42611000 	rsbmi	r1, r1, #0
    9578:	e8bd8010 	pop	{r4, pc}

0000957c <math_s32_divide_error>:
    957c:	e3a00000 	mov	r0, #0
    9580:	e3a01000 	mov	r1, #0
    9584:	e8bd8010 	pop	{r4, pc}

00009588 <math_s32_module>:
    9588:	e92d4010 	push	{r4, lr}
    958c:	e3510000 	cmp	r1, #0
    9590:	0a00000c 	beq	95c8 <math_s32_module_error>
    9594:	e1a03fc0 	asr	r3, r0, #31
    9598:	e0204003 	eor	r4, r0, r3
    959c:	e0444003 	sub	r4, r4, r3
    95a0:	e1a02fc1 	asr	r2, r1, #31
    95a4:	e0213002 	eor	r3, r1, r2
    95a8:	e0433002 	sub	r3, r3, r2
    95ac:	e1a00004 	mov	r0, r4
    95b0:	e1a01003 	mov	r1, r3
    95b4:	ebffffb6 	bl	9494 <math_u32_divide>
    95b8:	e1a02fc0 	asr	r2, r0, #31
    95bc:	e0210002 	eor	r0, r1, r2
    95c0:	42410000 	submi	r0, r1, #0
    95c4:	e8bd8010 	pop	{r4, pc}

000095c8 <math_s32_module_error>:
    95c8:	e3a00000 	mov	r0, #0
    95cc:	e8bd8010 	pop	{r4, pc}

000095d0 <gpio_mode_write>:
    95d0:	e3500035 	cmp	r0, #53	@ 0x35
    95d4:	93510007 	cmpls	r1, #7
    95d8:	8a000013 	bhi	962c <gpio_setModeError>
    95dc:	e92d4010 	push	{r4, lr}
    95e0:	e3a02000 	mov	r2, #0
    95e4:	e3822000 	orr	r2, r2, #0
    95e8:	e3822602 	orr	r2, r2, #2097152	@ 0x200000
    95ec:	e3822202 	orr	r2, r2, #536870912	@ 0x20000000

000095f0 <gpio_setModeLoop>:
    95f0:	e350000a 	cmp	r0, #10
    95f4:	4a000002 	bmi	9604 <gpio_mode>
    95f8:	e2822004 	add	r2, r2, #4
    95fc:	e240000a 	sub	r0, r0, #10
    9600:	eafffffa 	b	95f0 <gpio_setModeLoop>

00009604 <gpio_mode>:
    9604:	e0800080 	add	r0, r0, r0, lsl #1
    9608:	e1a01011 	lsl	r1, r1, r0
    960c:	e5923000 	ldr	r3, [r2]
    9610:	e3a04007 	mov	r4, #7
    9614:	e1e04014 	mvn	r4, r4, lsl r0
    9618:	e0033004 	and	r3, r3, r4
    961c:	e1811003 	orr	r1, r1, r3
    9620:	e5821000 	str	r1, [r2]
    9624:	e3a00000 	mov	r0, #0
    9628:	ea000001 	b	9634 <gpio_setModeEnd>

0000962c <gpio_setModeError>:
    962c:	e3e00000 	mvn	r0, #0
    9630:	e8bd8010 	pop	{r4, pc}

00009634 <gpio_setModeEnd>:
    9634:	e8bd8010 	pop	{r4, pc}

00009638 <gpio_pud_mode_write>:
    9638:	e3500007 	cmp	r0, #7
    963c:	83e00000 	mvnhi	r0, #0
    9640:	812fff1e 	bxhi	lr
    9644:	e3510002 	cmp	r1, #2
    9648:	83e01001 	mvnhi	r1, #1
    964c:	812fff1e 	bxhi	lr
    9650:	e92d4010 	push	{r4, lr}
    9654:	e1a04001 	mov	r4, r1
    9658:	e3a01020 	mov	r1, #32
    965c:	ebffff8c 	bl	9494 <math_u32_divide>
    9660:	e3a02000 	mov	r2, #0
    9664:	e3822000 	orr	r2, r2, #0
    9668:	e3822602 	orr	r2, r2, #2097152	@ 0x200000
    966c:	e3822202 	orr	r2, r2, #536870912	@ 0x20000000
    9670:	e5824094 	str	r4, [r2, #148]	@ 0x94
    9674:	e1a03103 	lsl	r3, r3, #2
    9678:	e2830098 	add	r0, r3, #152	@ 0x98
    967c:	e3a03001 	mov	r3, #1
    9680:	e1a03113 	lsl	r3, r3, r1
    9684:	e7823000 	str	r3, [r2, r0]
    9688:	e1a01000 	mov	r1, r0
    968c:	e3a00096 	mov	r0, #150	@ 0x96
    9690:	ebffff78 	bl	9478 <utils_delay>
    9694:	e3a03000 	mov	r3, #0
    9698:	e5823094 	str	r3, [r2, #148]	@ 0x94
    969c:	e7823001 	str	r3, [r2, r1]
    96a0:	e3a00000 	mov	r0, #0
    96a4:	e8bd8010 	pop	{r4, pc}

000096a8 <gpio_pin_write>:
    96a8:	e3500035 	cmp	r0, #53	@ 0x35
    96ac:	83e00000 	mvnhi	r0, #0
    96b0:	812fff1e 	bxhi	lr
    96b4:	e92d4010 	push	{r4, lr}
    96b8:	e2014001 	and	r4, r1, #1
    96bc:	e3a01020 	mov	r1, #32
    96c0:	ebffff73 	bl	9494 <math_u32_divide>
    96c4:	e1a00100 	lsl	r0, r0, #2
    96c8:	e3a03001 	mov	r3, #1
    96cc:	e1a01113 	lsl	r1, r3, r1
    96d0:	e3540000 	cmp	r4, #0
    96d4:	02800028 	addeq	r0, r0, #40	@ 0x28
    96d8:	1280001c 	addne	r0, r0, #28
    96dc:	e3a02000 	mov	r2, #0
    96e0:	e3822000 	orr	r2, r2, #0
    96e4:	e3822602 	orr	r2, r2, #2097152	@ 0x200000
    96e8:	e3822202 	orr	r2, r2, #536870912	@ 0x20000000
    96ec:	e7923000 	ldr	r3, [r2, r0]
    96f0:	e1833001 	orr	r3, r3, r1
    96f4:	e7823000 	str	r3, [r2, r0]
    96f8:	e8bd4010 	pop	{r4, lr}

000096fc <aux_mini_uart_init>:
    96fc:	e3a03050 	mov	r3, #80	@ 0x50
    9700:	e3833cd6 	orr	r3, r3, #54784	@ 0xd600
    9704:	e3833737 	orr	r3, r3, #14417920	@ 0xdc0000
    9708:	e3833401 	orr	r3, r3, #16777216	@ 0x1000000
    970c:	e1500003 	cmp	r0, r3
    9710:	812fff1e 	bxhi	lr
    9714:	e3510003 	cmp	r1, #3
    9718:	812fff1e 	bxhi	lr
    971c:	e92d4030 	push	{r4, r5, lr}
    9720:	e1a04000 	mov	r4, r0
    9724:	e1a05001 	mov	r5, r1
    9728:	e3a0000e 	mov	r0, #14
    972c:	e3a01002 	mov	r1, #2
    9730:	ebffffa6 	bl	95d0 <gpio_mode_write>
    9734:	e3a0000f 	mov	r0, #15
    9738:	e3a01002 	mov	r1, #2
    973c:	ebffffa3 	bl	95d0 <gpio_mode_write>
    9740:	e3a0000e 	mov	r0, #14
    9744:	e3a01000 	mov	r1, #0
    9748:	ebffffba 	bl	9638 <gpio_pud_mode_write>
    974c:	e3a0000f 	mov	r0, #15
    9750:	e3a01000 	mov	r1, #0
    9754:	ebffffb7 	bl	9638 <gpio_pud_mode_write>
    9758:	e3a00080 	mov	r0, #128	@ 0x80
    975c:	e3800cb2 	orr	r0, r0, #45568	@ 0xb200
    9760:	e38008e6 	orr	r0, r0, #15073280	@ 0xe60000
    9764:	e380040e 	orr	r0, r0, #234881024	@ 0xe000000
    9768:	e1a01184 	lsl	r1, r4, #3
    976c:	ebffff48 	bl	9494 <math_u32_divide>
    9770:	e2400001 	sub	r0, r0, #1
    9774:	e3a03000 	mov	r3, #0
    9778:	e3833a05 	orr	r3, r3, #20480	@ 0x5000
    977c:	e3833821 	orr	r3, r3, #2162688	@ 0x210000
    9780:	e3833202 	orr	r3, r3, #536870912	@ 0x20000000
    9784:	e5932004 	ldr	r2, [r3, #4]
    9788:	e3822001 	orr	r2, r2, #1
    978c:	e5832004 	str	r2, [r3, #4]
    9790:	e3a02000 	mov	r2, #0
    9794:	e5832044 	str	r2, [r3, #68]	@ 0x44
    9798:	e3a02000 	mov	r2, #0
    979c:	e5832060 	str	r2, [r3, #96]	@ 0x60
    97a0:	e583504c 	str	r5, [r3, #76]	@ 0x4c
    97a4:	e3a02000 	mov	r2, #0
    97a8:	e5832050 	str	r2, [r3, #80]	@ 0x50
    97ac:	e3a02000 	mov	r2, #0
    97b0:	e5832048 	str	r2, [r3, #72]	@ 0x48
    97b4:	e5830068 	str	r0, [r3, #104]	@ 0x68
    97b8:	e3a03000 	mov	r3, #0
    97bc:	e3833a05 	orr	r3, r3, #20480	@ 0x5000
    97c0:	e3833821 	orr	r3, r3, #2162688	@ 0x210000
    97c4:	e3833202 	orr	r3, r3, #536870912	@ 0x20000000
    97c8:	e3a02003 	mov	r2, #3
    97cc:	e5832060 	str	r2, [r3, #96]	@ 0x60
    97d0:	e8bd8030 	pop	{r4, r5, pc}

000097d4 <aux_mini_uart_byte_read>:
    97d4:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    97d8:	e3a01000 	mov	r1, #0
    97dc:	e3811a05 	orr	r1, r1, #20480	@ 0x5000
    97e0:	e3811821 	orr	r1, r1, #2162688	@ 0x210000
    97e4:	e3811202 	orr	r1, r1, #536870912	@ 0x20000000
    97e8:	e5912054 	ldr	r2, [r1, #84]	@ 0x54
    97ec:	e2022001 	and	r2, r2, #1
    97f0:	e3520000 	cmp	r2, #0
    97f4:	0afffffb 	beq	97e8 <aux_mini_uart_byte_read+0x14>
    97f8:	e5910040 	ldr	r0, [r1, #64]	@ 0x40
    97fc:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009800 <aux_mini_uart_byte_write>:
    9800:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9804:	e3a01000 	mov	r1, #0
    9808:	e3811a05 	orr	r1, r1, #20480	@ 0x5000
    980c:	e3811821 	orr	r1, r1, #2162688	@ 0x210000
    9810:	e3811202 	orr	r1, r1, #536870912	@ 0x20000000
    9814:	e5912054 	ldr	r2, [r1, #84]	@ 0x54
    9818:	e2022020 	and	r2, r2, #32
    981c:	e3520000 	cmp	r2, #0
    9820:	0afffffb 	beq	9814 <aux_mini_uart_byte_write+0x14>
    9824:	e20000ff 	and	r0, r0, #255	@ 0xff
    9828:	e5810040 	str	r0, [r1, #64]	@ 0x40
    982c:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009830 <aux_mini_uart_write_bytes>:
    9830:	e92d4030 	push	{r4, r5, lr}
    9834:	e1a03000 	mov	r3, r0
    9838:	e1a04001 	mov	r4, r1
    983c:	e3a05000 	mov	r5, #0
    9840:	e1530005 	cmp	r3, r5
    9844:	0a000007 	beq	9868 <aux_mini_uart_write_bytes+0x38>
    9848:	e1550004 	cmp	r5, r4
    984c:	2a000005 	bcs	9868 <aux_mini_uart_write_bytes+0x38>
    9850:	e7d30005 	ldrb	r0, [r3, r5]
    9854:	e3500000 	cmp	r0, #0
    9858:	0a000002 	beq	9868 <aux_mini_uart_write_bytes+0x38>
    985c:	ebffffe7 	bl	9800 <aux_mini_uart_byte_write>
    9860:	e2855001 	add	r5, r5, #1
    9864:	eafffff7 	b	9848 <aux_mini_uart_write_bytes+0x18>
    9868:	e8bd8030 	pop	{r4, r5, pc}

0000986c <aux_mini_uart_u32_write>:
    986c:	e3510010 	cmp	r1, #16
    9870:	812fff1e 	bxhi	lr
    9874:	e92d4070 	push	{r4, r5, r6, lr}
    9878:	e1a04000 	mov	r4, r0
    987c:	e1a05001 	mov	r5, r1
    9880:	e59f6fbc 	ldr	r6, [pc, #4028]	@ a844 <loop+0x24>
    9884:	e3a00000 	mov	r0, #0
    9888:	e4c60001 	strb	r0, [r6], #1
    988c:	e1a00004 	mov	r0, r4
    9890:	e1a01005 	mov	r1, r5
    9894:	ebfffefe 	bl	9494 <math_u32_divide>
    9898:	e1a04000 	mov	r4, r0
    989c:	e1a00001 	mov	r0, r1
    98a0:	e3500009 	cmp	r0, #9
    98a4:	82800007 	addhi	r0, r0, #7
    98a8:	e2800030 	add	r0, r0, #48	@ 0x30
    98ac:	e4c60001 	strb	r0, [r6], #1
    98b0:	e3340000 	teq	r4, #0
    98b4:	1afffff4 	bne	988c <aux_mini_uart_u32_write+0x20>
    98b8:	e5760001 	ldrb	r0, [r6, #-1]!
    98bc:	e3500000 	cmp	r0, #0
    98c0:	1bffffce 	blne	9800 <aux_mini_uart_byte_write>
    98c4:	1afffffb 	bne	98b8 <aux_mini_uart_u32_write+0x4c>
    98c8:	e8bd8070 	pop	{r4, r5, r6, pc}

000098cc <aux_mini_uart_s32_write>:
    98cc:	e92d4070 	push	{r4, r5, r6, lr}
    98d0:	e1a04000 	mov	r4, r0
    98d4:	e3500000 	cmp	r0, #0
    98d8:	b3a0002d 	movlt	r0, #45	@ 0x2d
    98dc:	ebffffc7 	bl	9800 <aux_mini_uart_byte_write>
    98e0:	e59f6f5c 	ldr	r6, [pc, #3932]	@ a844 <loop+0x24>
    98e4:	e3a00000 	mov	r0, #0
    98e8:	e4c60001 	strb	r0, [r6], #1
    98ec:	e1a00004 	mov	r0, r4
    98f0:	e3a0100a 	mov	r1, #10
    98f4:	ebffff0f 	bl	9538 <math_s32_divide>
    98f8:	e1a04000 	mov	r4, r0
    98fc:	e1a00001 	mov	r0, r1
    9900:	ebfffedf 	bl	9484 <math_s32_abs>
    9904:	e2800030 	add	r0, r0, #48	@ 0x30
    9908:	e20000ff 	and	r0, r0, #255	@ 0xff
    990c:	e4c60001 	strb	r0, [r6], #1
    9910:	e3340000 	teq	r4, #0
    9914:	1afffff4 	bne	98ec <aux_mini_uart_s32_write+0x20>
    9918:	e5760001 	ldrb	r0, [r6, #-1]!
    991c:	e3500000 	cmp	r0, #0
    9920:	1bffffb6 	blne	9800 <aux_mini_uart_byte_write>
    9924:	1afffffb 	bne	9918 <aux_mini_uart_s32_write+0x4c>
    9928:	e8bd8070 	pop	{r4, r5, r6, pc}

0000992c <arm_timer_init>:
    992c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9930:	e59f0f10 	ldr	r0, [pc, #3856]	@ a848 <loop+0x28>
    9934:	e3a01b03 	mov	r1, #3072	@ 0xc00
    9938:	e5801000 	str	r1, [r0]
    993c:	e3a0108a 	mov	r1, #138	@ 0x8a
    9940:	e5801008 	str	r1, [r0, #8]
    9944:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009948 <arm_timer_value_read>:
    9948:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    994c:	e59f0ef4 	ldr	r0, [pc, #3828]	@ a848 <loop+0x28>
    9950:	e5900004 	ldr	r0, [r0, #4]
    9954:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009958 <arm_timer_irq_clear>:
    9958:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    995c:	e59f0ee4 	ldr	r0, [pc, #3812]	@ a848 <loop+0x28>
    9960:	e3a01001 	mov	r1, #1
    9964:	e580100c 	str	r1, [r0, #12]
    9968:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000996c <interrupt_reset>:
    996c:	eafffffe 	b	996c <interrupt_reset>

00009970 <interrupt_unused>:
    9970:	eafffffe 	b	9970 <interrupt_unused>

00009974 <interrupt_undefined>:
    9974:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    9978:	e14f0000 	mrs	r0, SPSR
    997c:	e52d0004 	push	{r0}		@ (str r0, [sp, #-4]!)
    9980:	e59f0ec4 	ldr	r0, [pc, #3780]	@ a84c <loop+0x2c>
    9984:	e3a01017 	mov	r1, #23
    9988:	ebffffa8 	bl	9830 <aux_mini_uart_write_bytes>
    998c:	e49d0004 	pop	{r0}		@ (ldr r0, [sp], #4)
    9990:	e16ff000 	msr	SPSR_fsxc, r0
    9994:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    9998:	e25ef004 	subs	pc, lr, #4

0000999c <interrupt_software>:
    999c:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    99a0:	e59f0ea8 	ldr	r0, [pc, #3752]	@ a850 <loop+0x30>
    99a4:	e3a01014 	mov	r1, #20
    99a8:	ebffffa0 	bl	9830 <aux_mini_uart_write_bytes>
    99ac:	e8bd9fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

000099b0 <interrupt_prefetch_abort>:
    99b0:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    99b4:	e14f0000 	mrs	r0, SPSR
    99b8:	e52d0004 	push	{r0}		@ (str r0, [sp, #-4]!)
    99bc:	e59f0e90 	ldr	r0, [pc, #3728]	@ a854 <loop+0x34>
    99c0:	e3a01016 	mov	r1, #22
    99c4:	ebffff99 	bl	9830 <aux_mini_uart_write_bytes>
    99c8:	e49d0004 	pop	{r0}		@ (ldr r0, [sp], #4)
    99cc:	e16ff000 	msr	SPSR_fsxc, r0
    99d0:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    99d4:	e25ef004 	subs	pc, lr, #4

000099d8 <interrupt_data_abort>:
    99d8:	eafffffe 	b	99d8 <interrupt_data_abort>

000099dc <interrupt_request>:
    99dc:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    99e0:	e14f0000 	mrs	r0, SPSR
    99e4:	e52d0004 	push	{r0}		@ (str r0, [sp, #-4]!)
    99e8:	e59f0e68 	ldr	r0, [pc, #3688]	@ a858 <loop+0x38>
    99ec:	e3a0100d 	mov	r1, #13
    99f0:	ebffff8e 	bl	9830 <aux_mini_uart_write_bytes>
    99f4:	ebffffd7 	bl	9958 <arm_timer_irq_clear>
    99f8:	e49d0004 	pop	{r0}		@ (ldr r0, [sp], #4)
    99fc:	e16ff000 	msr	SPSR_fsxc, r0
    9a00:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    9a04:	e25ef004 	subs	pc, lr, #4

00009a08 <interrupt_fast_request>:
    9a08:	eafffffe 	b	9a08 <interrupt_fast_request>

00009a0c <interrupts_init>:
    9a0c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    9a10:	e59f0e44 	ldr	r0, [pc, #3652]	@ a85c <loop+0x3c>
    9a14:	e3a01000 	mov	r1, #0
    9a18:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    9a1c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    9a20:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    9a24:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    9a28:	e59f0e30 	ldr	r0, [pc, #3632]	@ a860 <loop+0x40>
    9a2c:	e3a01001 	mov	r1, #1
    9a30:	e5801018 	str	r1, [r0, #24]
    9a34:	e10f0000 	mrs	r0, CPSR
    9a38:	e3c00080 	bic	r0, r0, #128	@ 0x80
    9a3c:	e121f000 	msr	CPSR_c, r0
    9a40:	f1080080 	cpsie	i
    9a44:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

00009a48 <interrupt_vector_table>:
    9a48:	e59ff018 	ldr	pc, [pc, #24]	@ 9a68 <_interrupt_reset>
    9a4c:	e59ff018 	ldr	pc, [pc, #24]	@ 9a6c <_interrupt_undefined>
    9a50:	e59ff018 	ldr	pc, [pc, #24]	@ 9a70 <_interrupt_software>
    9a54:	e59ff018 	ldr	pc, [pc, #24]	@ 9a74 <_interrupt_prefetch_abort>
    9a58:	e59ff018 	ldr	pc, [pc, #24]	@ 9a78 <_interrupt_data_abort>
    9a5c:	e59ff018 	ldr	pc, [pc, #24]	@ 9a7c <_interrupt_unused>
    9a60:	e59ff018 	ldr	pc, [pc, #24]	@ 9a80 <_interrupt_request>
    9a64:	e59ff018 	ldr	pc, [pc, #24]	@ 9a84 <_interrupt_fast_request>

00009a68 <_interrupt_reset>:
    9a68:	0000996c 	.word	0x0000996c

00009a6c <_interrupt_undefined>:
    9a6c:	00009974 	.word	0x00009974

00009a70 <_interrupt_software>:
    9a70:	0000999c 	.word	0x0000999c

00009a74 <_interrupt_prefetch_abort>:
    9a74:	000099b0 	.word	0x000099b0

00009a78 <_interrupt_data_abort>:
    9a78:	000099d8 	.word	0x000099d8

00009a7c <_interrupt_unused>:
    9a7c:	00009970 	.word	0x00009970

00009a80 <_interrupt_request>:
    9a80:	000099dc 	.word	0x000099dc

00009a84 <_interrupt_fast_request>:
    9a84:	00009a08 	.word	0x00009a08

00009a88 <mailbox_write>:
    9a88:	e310000f 	tst	r0, #15
    9a8c:	112fff1e 	bxne	lr
    9a90:	e351000f 	cmp	r1, #15
    9a94:	812fff1e 	bxhi	lr
    9a98:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9a9c:	e1a02000 	mov	r2, r0
    9aa0:	e59f0dbc 	ldr	r0, [pc, #3516]	@ a864 <loop+0x44>
    9aa4:	e5903018 	ldr	r3, [r0, #24]
    9aa8:	e3130102 	tst	r3, #-2147483648	@ 0x80000000
    9aac:	1afffffc 	bne	9aa4 <mailbox_write+0x1c>
    9ab0:	e0822001 	add	r2, r2, r1
    9ab4:	e5802020 	str	r2, [r0, #32]
    9ab8:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009abc <mailbox_read>:
    9abc:	e350000f 	cmp	r0, #15
    9ac0:	812fff1e 	bxhi	lr
    9ac4:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9ac8:	e1a01000 	mov	r1, r0
    9acc:	e59f0d90 	ldr	r0, [pc, #3472]	@ a864 <loop+0x44>
    9ad0:	e5903018 	ldr	r3, [r0, #24]
    9ad4:	e3130101 	tst	r3, #1073741824	@ 0x40000000
    9ad8:	1afffffc 	bne	9ad0 <mailbox_read+0x14>
    9adc:	e5903000 	ldr	r3, [r0]
    9ae0:	e203200f 	and	r2, r3, #15
    9ae4:	e1320001 	teq	r2, r1
    9ae8:	1afffff8 	bne	9ad0 <mailbox_read+0x14>
    9aec:	e3c3000f 	bic	r0, r3, #15
    9af0:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009af4 <framebuffer_init>:
    9af4:	e3500b02 	cmp	r0, #2048	@ 0x800
    9af8:	93510b02 	cmpls	r1, #2048	@ 0x800
    9afc:	93520020 	cmpls	r2, #32
    9b00:	83a00000 	movhi	r0, #0
    9b04:	81a0f00e 	movhi	pc, lr
    9b08:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9b0c:	e59f3d54 	ldr	r3, [pc, #3412]	@ a868 <loop+0x48>
    9b10:	e5830000 	str	r0, [r3]
    9b14:	e5831004 	str	r1, [r3, #4]
    9b18:	e5830008 	str	r0, [r3, #8]
    9b1c:	e583100c 	str	r1, [r3, #12]
    9b20:	e5832014 	str	r2, [r3, #20]
    9b24:	e2830101 	add	r0, r3, #1073741824	@ 0x40000000
    9b28:	e3a01001 	mov	r1, #1
    9b2c:	ebffffd5 	bl	9a88 <mailbox_write>
    9b30:	e3a00001 	mov	r0, #1
    9b34:	ebffffe0 	bl	9abc <mailbox_read>
    9b38:	e1a00003 	mov	r0, r3
    9b3c:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009b40 <framebuffer_get_dimmensions>:
    9b40:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9b44:	e59f2d20 	ldr	r2, [pc, #3360]	@ a86c <loop+0x4c>
    9b48:	e2820101 	add	r0, r2, #1073741824	@ 0x40000000
    9b4c:	e3a01008 	mov	r1, #8
    9b50:	ebffffcc 	bl	9a88 <mailbox_write>
    9b54:	e3a00008 	mov	r0, #8
    9b58:	ebffffd7 	bl	9abc <mailbox_read>
    9b5c:	e590300c 	ldr	r3, [r0, #12]
    9b60:	e3530008 	cmp	r3, #8
    9b64:	e3e00000 	mvn	r0, #0
    9b68:	1a000003 	bne	9b7c <error>
    9b6c:	e59f2cf8 	ldr	r2, [pc, #3320]	@ a86c <loop+0x4c>
    9b70:	e5920014 	ldr	r0, [r2, #20]
    9b74:	e5921018 	ldr	r1, [r2, #24]
    9b78:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009b7c <error>:
    9b7c:	e3700001 	cmn	r0, #1
    9b80:	059f0ce8 	ldreq	r0, [pc, #3304]	@ a870 <loop+0x50>
    9b84:	03a01036 	moveq	r1, #54	@ 0x36
    9b88:	0bffff28 	bleq	9830 <aux_mini_uart_write_bytes>
    9b8c:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009b90 <canvas_options_write>:
    9b90:	e92d4010 	push	{r4, lr}
    9b94:	e59f4cd8 	ldr	r4, [pc, #3288]	@ a874 <loop+0x54>
    9b98:	e5840000 	str	r0, [r4]
    9b9c:	e5841004 	str	r1, [r4, #4]
    9ba0:	e5842008 	str	r2, [r4, #8]
    9ba4:	e584300c 	str	r3, [r4, #12]
    9ba8:	e8bd8010 	pop	{r4, pc}

00009bac <canvas_address_write>:
    9bac:	e59f1cc4 	ldr	r1, [pc, #3268]	@ a878 <loop+0x58>
    9bb0:	e5810000 	str	r0, [r1]
    9bb4:	e12fff1e 	bx	lr

00009bb8 <canvas_address_read>:
    9bb8:	e59f1cb8 	ldr	r1, [pc, #3256]	@ a878 <loop+0x58>
    9bbc:	e5910000 	ldr	r0, [r1]
    9bc0:	e12fff1e 	bx	lr

00009bc4 <canvas_width_write>:
    9bc4:	e59f1cb0 	ldr	r1, [pc, #3248]	@ a87c <loop+0x5c>
    9bc8:	e5810000 	str	r0, [r1]
    9bcc:	e12fff1e 	bx	lr

00009bd0 <canvas_width_read>:
    9bd0:	e59f1ca4 	ldr	r1, [pc, #3236]	@ a87c <loop+0x5c>
    9bd4:	e5910000 	ldr	r0, [r1]
    9bd8:	e12fff1e 	bx	lr

00009bdc <canvas_height_write>:
    9bdc:	e59f1c9c 	ldr	r1, [pc, #3228]	@ a880 <loop+0x60>
    9be0:	e5810000 	str	r0, [r1]
    9be4:	e12fff1e 	bx	lr

00009be8 <canvas_height_read>:
    9be8:	e59f1c90 	ldr	r1, [pc, #3216]	@ a880 <loop+0x60>
    9bec:	e5910000 	ldr	r0, [r1]
    9bf0:	e12fff1e 	bx	lr

00009bf4 <canvas_depth_write>:
    9bf4:	e59f1c88 	ldr	r1, [pc, #3208]	@ a884 <loop+0x64>
    9bf8:	e5810000 	str	r0, [r1]
    9bfc:	e12fff1e 	bx	lr

00009c00 <canvas_depth_read>:
    9c00:	e59f1c7c 	ldr	r1, [pc, #3196]	@ a884 <loop+0x64>
    9c04:	e5910000 	ldr	r0, [r1]
    9c08:	e12fff1e 	bx	lr

00009c0c <canvas_pitch_write>:
    9c0c:	e59f1c74 	ldr	r1, [pc, #3188]	@ a888 <loop+0x68>
    9c10:	e5810000 	str	r0, [r1]
    9c14:	e12fff1e 	bx	lr

00009c18 <canvas_pitch_read>:
    9c18:	e59f1c68 	ldr	r1, [pc, #3176]	@ a888 <loop+0x68>
    9c1c:	e5910000 	ldr	r0, [r1]
    9c20:	e12fff1e 	bx	lr

00009c24 <canvas_foreground_write>:
    9c24:	e59f1c60 	ldr	r1, [pc, #3168]	@ a88c <loop+0x6c>
    9c28:	e5810000 	str	r0, [r1]
    9c2c:	e12fff1e 	bx	lr

00009c30 <canvas_foreground_read>:
    9c30:	e59f1c54 	ldr	r1, [pc, #3156]	@ a88c <loop+0x6c>
    9c34:	e5910000 	ldr	r0, [r1]
    9c38:	e12fff1e 	bx	lr

00009c3c <canvas_pixel_draw>:
    9c3c:	e59f2c30 	ldr	r2, [pc, #3120]	@ a874 <loop+0x54>
    9c40:	e5923008 	ldr	r3, [r2, #8]
    9c44:	e1510003 	cmp	r1, r3
    9c48:	212fff1e 	bxcs	lr
    9c4c:	e5923004 	ldr	r3, [r2, #4]
    9c50:	e1500003 	cmp	r0, r3
    9c54:	212fff1e 	bxcs	lr
    9c58:	e5922000 	ldr	r2, [r2]
    9c5c:	e0200391 	mla	r0, r1, r3, r0
    9c60:	e1a00100 	lsl	r0, r0, #2
    9c64:	e5933014 	ldr	r3, [r3, #20]
    9c68:	e7823000 	str	r3, [r2, r0]
    9c6c:	e12fff1e 	bx	lr

00009c70 <canvas_drawLine>:
    9c70:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    9c74:	e59f4bfc 	ldr	r4, [pc, #3068]	@ a878 <loop+0x58>
    9c78:	e5944000 	ldr	r4, [r4]
    9c7c:	e5945004 	ldr	r5, [r4, #4]
    9c80:	e1510005 	cmp	r1, r5
    9c84:	41530005 	cmpmi	r3, r5
    9c88:	28bd9ff0 	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    9c8c:	e5945000 	ldr	r5, [r4]
    9c90:	e1500005 	cmp	r0, r5
    9c94:	41520005 	cmpmi	r2, r5
    9c98:	28bd9ff0 	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    9c9c:	e1a06005 	mov	r6, r5
    9ca0:	e594b020 	ldr	fp, [r4, #32]
    9ca4:	e1a0c00b 	mov	ip, fp
    9ca8:	e0250691 	mla	r5, r1, r6, r0
    9cac:	e08bb085 	add	fp, fp, r5, lsl #1
    9cb0:	e0252693 	mla	r5, r3, r6, r2
    9cb4:	e08cc085 	add	ip, ip, r5, lsl #1
    9cb8:	e0526000 	subs	r6, r2, r0
    9cbc:	40467006 	submi	r7, r6, r6
    9cc0:	40476006 	submi	r6, r7, r6
    9cc4:	e0537001 	subs	r7, r3, r1
    9cc8:	40478007 	submi	r8, r7, r7
    9ccc:	40487007 	submi	r7, r8, r7
    9cd0:	e1560007 	cmp	r6, r7
    9cd4:	43a05001 	movmi	r5, #1
    9cd8:	23a05000 	movcs	r5, #0
    9cdc:	40200001 	eormi	r0, r0, r1
    9ce0:	40211000 	eormi	r1, r1, r0
    9ce4:	40200001 	eormi	r0, r0, r1
    9ce8:	40222003 	eormi	r2, r2, r3
    9cec:	40233002 	eormi	r3, r3, r2
    9cf0:	40222003 	eormi	r2, r2, r3
    9cf4:	40266007 	eormi	r6, r6, r7
    9cf8:	40277006 	eormi	r7, r7, r6
    9cfc:	40266007 	eormi	r6, r6, r7
    9d00:	402bb00c 	eormi	fp, fp, ip
    9d04:	402cc00b 	eormi	ip, ip, fp
    9d08:	402bb00c 	eormi	fp, fp, ip
    9d0c:	e0478006 	sub	r8, r7, r6
    9d10:	e1a08088 	lsl	r8, r8, #1
    9d14:	e2879002 	add	r9, r7, #2
    9d18:	e0499006 	sub	r9, r9, r6
    9d1c:	e1a07087 	lsl	r7, r7, #1
    9d20:	e5944000 	ldr	r4, [r4]
    9d24:	e1520000 	cmp	r2, r0
    9d28:	e3a00001 	mov	r0, #1
    9d2c:	93e00000 	mvnls	r0, #0
    9d30:	e1530001 	cmp	r3, r1
    9d34:	e3a01001 	mov	r1, #1
    9d38:	93e01000 	mvnls	r1, #0
    9d3c:	e3550000 	cmp	r5, #0
    9d40:	1a000003 	bne	9d54 <canvas_drawLineCaseB>

00009d44 <canvas_drawLineCaseA>:
    9d44:	e0010194 	mul	r1, r4, r1
    9d48:	e1a01081 	lsl	r1, r1, #1
    9d4c:	e1a00080 	lsl	r0, r0, #1
    9d50:	ea000002 	b	9d60 <canvas_drawLineCaseEnd>

00009d54 <canvas_drawLineCaseB>:
    9d54:	e0000094 	mul	r0, r4, r0
    9d58:	e1a00080 	lsl	r0, r0, #1
    9d5c:	e1a01081 	lsl	r1, r1, #1

00009d60 <canvas_drawLineCaseEnd>:
    9d60:	e59f4b24 	ldr	r4, [pc, #2852]	@ a88c <loop+0x6c>
    9d64:	e1d440b0 	ldrh	r4, [r4]

00009d68 <canvas_drawLineLoop>:
    9d68:	e15b000c 	cmp	fp, ip
    9d6c:	0a000006 	beq	9d8c <canvas_drawLineEnd>
    9d70:	e3590000 	cmp	r9, #0
    9d74:	b0899007 	addlt	r9, r9, r7
    9d78:	a08bb001 	addge	fp, fp, r1
    9d7c:	a0899008 	addge	r9, r9, r8
    9d80:	e1cb40b0 	strh	r4, [fp]
    9d84:	e08bb000 	add	fp, fp, r0
    9d88:	eafffff6 	b	9d68 <canvas_drawLineLoop>

00009d8c <canvas_drawLineEnd>:
    9d8c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

00009d90 <canvas_fill_rect>:
    9d90:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    9d94:	e59f4ad8 	ldr	r4, [pc, #2776]	@ a874 <loop+0x54>
    9d98:	e0815003 	add	r5, r1, r3
    9d9c:	e5946008 	ldr	r6, [r4, #8]
    9da0:	e1550006 	cmp	r5, r6
    9da4:	28bd83f0 	popcs	{r4, r5, r6, r7, r8, r9, pc}
    9da8:	e0805002 	add	r5, r0, r2
    9dac:	e5946004 	ldr	r6, [r4, #4]
    9db0:	91550006 	cmpls	r5, r6
    9db4:	28bd83f0 	popcs	{r4, r5, r6, r7, r8, r9, pc}
    9db8:	e5949014 	ldr	r9, [r4, #20]
    9dbc:	e5944000 	ldr	r4, [r4]
    9dc0:	e1a07000 	mov	r7, r0
    9dc4:	e1a08002 	mov	r8, r2
    9dc8:	e0257691 	mla	r5, r1, r6, r7
    9dcc:	e1a05105 	lsl	r5, r5, #2
    9dd0:	e7849005 	str	r9, [r4, r5]
    9dd4:	e2877001 	add	r7, r7, #1
    9dd8:	e2588001 	subs	r8, r8, #1
    9ddc:	2afffff9 	bcs	9dc8 <canvas_fill_rect+0x38>
    9de0:	e2811001 	add	r1, r1, #1
    9de4:	e2533001 	subs	r3, r3, #1
    9de8:	2afffff4 	bcs	9dc0 <canvas_fill_rect+0x30>
    9dec:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

00009df0 <canvas_char_draw>:
    9df0:	e35000ff 	cmp	r0, #255	@ 0xff
    9df4:	812fff1e 	bxhi	lr
    9df8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9dfc:	e59f3a70 	ldr	r3, [pc, #2672]	@ a874 <loop+0x54>
    9e00:	e5935008 	ldr	r5, [r3, #8]
    9e04:	e2822008 	add	r2, r2, #8
    9e08:	e1520005 	cmp	r2, r5
    9e0c:	2a000020 	bcs	9e94 <canvas_char_draw+0xa4>
    9e10:	e5935004 	ldr	r5, [r3, #4]
    9e14:	e2811005 	add	r1, r1, #5
    9e18:	e1510005 	cmp	r1, r5
    9e1c:	2a00001c 	bcs	9e94 <canvas_char_draw+0xa4>
    9e20:	e5933000 	ldr	r3, [r3]
    9e24:	e1a00180 	lsl	r0, r0, #3
    9e28:	e2422008 	sub	r2, r2, #8
    9e2c:	e0241592 	mla	r4, r2, r5, r1
    9e30:	e1a04104 	lsl	r4, r4, #2
    9e34:	e1a05105 	lsl	r5, r5, #2
    9e38:	e59f7a50 	ldr	r7, [pc, #2640]	@ a890 <loop+0x70>
    9e3c:	e59f8a48 	ldr	r8, [pc, #2632]	@ a88c <loop+0x6c>
    9e40:	e5988000 	ldr	r8, [r8]
    9e44:	e2800004 	add	r0, r0, #4
    9e48:	e7976000 	ldr	r6, [r7, r0]
    9e4c:	e1a06c26 	lsr	r6, r6, #24
    9e50:	e3a0a001 	mov	sl, #1
    9e54:	e3a09008 	mov	r9, #8
    9e58:	e3160001 	tst	r6, #1
    9e5c:	17838004 	strne	r8, [r3, r4]
    9e60:	e1a060a6 	lsr	r6, r6, #1
    9e64:	e0844005 	add	r4, r4, r5
    9e68:	e2599001 	subs	r9, r9, #1
    9e6c:	1afffff9 	bne	9e58 <canvas_char_draw+0x68>
    9e70:	e25aa001 	subs	sl, sl, #1
    9e74:	02400004 	subeq	r0, r0, #4
    9e78:	07976000 	ldreq	r6, [r7, r0]
    9e7c:	e0444185 	sub	r4, r4, r5, lsl #3
    9e80:	e2444004 	sub	r4, r4, #4
    9e84:	e3a09008 	mov	r9, #8
    9e88:	e3560000 	cmp	r6, #0
    9e8c:	13a09008 	movne	r9, #8
    9e90:	1afffff0 	bne	9e58 <canvas_char_draw+0x68>
    9e94:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00009e98 <canvas_text_draw>:
    9e98:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    9e9c:	e1a04000 	mov	r4, r0
    9ea0:	e1a05001 	mov	r5, r1
    9ea4:	e1a06002 	mov	r6, r2
    9ea8:	e1a07003 	mov	r7, r3
    9eac:	e1a08002 	mov	r8, r2
    9eb0:	e4d40001 	ldrb	r0, [r4], #1
    9eb4:	e3500000 	cmp	r0, #0
    9eb8:	0a000010 	beq	9f00 <canvas_text_draw+0x68>
    9ebc:	e3550000 	cmp	r5, #0
    9ec0:	3a00000e 	bcc	9f00 <canvas_text_draw+0x68>
    9ec4:	e350000a 	cmp	r0, #10
    9ec8:	0a000008 	beq	9ef0 <canvas_text_draw+0x58>
    9ecc:	e350000d 	cmp	r0, #13
    9ed0:	02455001 	subeq	r5, r5, #1
    9ed4:	0afffff5 	beq	9eb0 <canvas_text_draw+0x18>
    9ed8:	e1a01006 	mov	r1, r6
    9edc:	e1a02007 	mov	r2, r7
    9ee0:	ebffffc2 	bl	9df0 <canvas_char_draw>
    9ee4:	e2866005 	add	r6, r6, #5
    9ee8:	e2455001 	sub	r5, r5, #1
    9eec:	eaffffef 	b	9eb0 <canvas_text_draw+0x18>
    9ef0:	e1a06008 	mov	r6, r8
    9ef4:	e2877007 	add	r7, r7, #7
    9ef8:	e2455001 	sub	r5, r5, #1
    9efc:	eaffffeb 	b	9eb0 <canvas_text_draw+0x18>
    9f00:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00009f04 <spi0_init>:
    9f04:	e3510003 	cmp	r1, #3
    9f08:	812fff1e 	bxhi	lr
    9f0c:	e92d4030 	push	{r4, r5, lr}
    9f10:	e1a04000 	mov	r4, r0
    9f14:	e1a05001 	mov	r5, r1
    9f18:	e3a00008 	mov	r0, #8
    9f1c:	e3a01004 	mov	r1, #4
    9f20:	ebfffdaa 	bl	95d0 <gpio_mode_write>
    9f24:	e3a00009 	mov	r0, #9
    9f28:	e3a01004 	mov	r1, #4
    9f2c:	ebfffda7 	bl	95d0 <gpio_mode_write>
    9f30:	e3a0000a 	mov	r0, #10
    9f34:	e3a01004 	mov	r1, #4
    9f38:	ebfffda4 	bl	95d0 <gpio_mode_write>
    9f3c:	e3a0000b 	mov	r0, #11
    9f40:	e3a01004 	mov	r1, #4
    9f44:	ebfffda1 	bl	95d0 <gpio_mode_write>
    9f48:	e59f0944 	ldr	r0, [pc, #2372]	@ a894 <loop+0x74>
    9f4c:	e1a01004 	mov	r1, r4
    9f50:	e5900000 	ldr	r0, [r0]
    9f54:	ebfffd4e 	bl	9494 <math_u32_divide>
    9f58:	e2400001 	sub	r0, r0, #1
    9f5c:	e59f4934 	ldr	r4, [pc, #2356]	@ a898 <loop+0x78>
    9f60:	e3a01000 	mov	r1, #0
    9f64:	e5841000 	str	r1, [r4]
    9f68:	e5840008 	str	r0, [r4, #8]
    9f6c:	e3855000 	orr	r5, r5, #0
    9f70:	e5845000 	str	r5, [r4]
    9f74:	e8bd8030 	pop	{r4, r5, pc}

00009f78 <spi0_byte_write>:
    9f78:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    9f7c:	e20000ff 	and	r0, r0, #255	@ 0xff
    9f80:	e59f1910 	ldr	r1, [pc, #2320]	@ a898 <loop+0x78>
    9f84:	e5912000 	ldr	r2, [r1]
    9f88:	e38220b0 	orr	r2, r2, #176	@ 0xb0
    9f8c:	e5812000 	str	r2, [r1]
    9f90:	e5810004 	str	r0, [r1, #4]
    9f94:	e3a02801 	mov	r2, #65536	@ 0x10000
    9f98:	e5913000 	ldr	r3, [r1]
    9f9c:	e0033002 	and	r3, r3, r2
    9fa0:	e1530002 	cmp	r3, r2
    9fa4:	1afffffb 	bne	9f98 <spi0_byte_write+0x20>
    9fa8:	e3a02802 	mov	r2, #131072	@ 0x20000
    9fac:	e5913000 	ldr	r3, [r1]
    9fb0:	e0033002 	and	r3, r3, r2
    9fb4:	e1530002 	cmp	r3, r2
    9fb8:	1afffffb 	bne	9fac <spi0_byte_write+0x34>
    9fbc:	e5910004 	ldr	r0, [r1, #4]
    9fc0:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00009fc4 <spi0_bytes_write>:
    9fc4:	e92d4070 	push	{r4, r5, r6, lr}
    9fc8:	e1a04000 	mov	r4, r0
    9fcc:	e1a05001 	mov	r5, r1
    9fd0:	e3a06000 	mov	r6, #0
    9fd4:	e1560005 	cmp	r6, r5
    9fd8:	2a000003 	bcs	9fec <spi0_bytes_write+0x28>
    9fdc:	e7940006 	ldr	r0, [r4, r6]
    9fe0:	ebffffe4 	bl	9f78 <spi0_byte_write>
    9fe4:	e2866001 	add	r6, r6, #1
    9fe8:	eafffff9 	b	9fd4 <spi0_bytes_write+0x10>
    9fec:	e8bd8070 	pop	{r4, r5, r6, pc}

00009ff0 <spi0_byte_read>:
    9ff0:	e92d4010 	push	{r4, lr}
    9ff4:	e20000ff 	and	r0, r0, #255	@ 0xff
    9ff8:	e59f1898 	ldr	r1, [pc, #2200]	@ a898 <loop+0x78>
    9ffc:	e3a03701 	mov	r3, #262144	@ 0x40000
    a000:	e3a04801 	mov	r4, #65536	@ 0x10000
    a004:	e3a020b0 	mov	r2, #176	@ 0xb0
    a008:	e3822a01 	orr	r2, r2, #4096	@ 0x1000
    a00c:	e5812000 	str	r2, [r1]
    a010:	e5912000 	ldr	r2, [r1]
    a014:	e0022003 	and	r2, r2, r3
    a018:	e1520003 	cmp	r2, r3
    a01c:	1afffffb 	bne	a010 <spi0_byte_read+0x20>
    a020:	e5810004 	str	r0, [r1, #4]
    a024:	e5912000 	ldr	r2, [r1]
    a028:	e0022004 	and	r2, r2, r4
    a02c:	e1520004 	cmp	r2, r4
    a030:	1afffffb 	bne	a024 <spi0_byte_read+0x34>
    a034:	e3a02000 	mov	r2, #0
    a038:	e5812000 	str	r2, [r1]
    a03c:	e8bd8010 	pop	{r4, pc}

0000a040 <fat32_calculate_root_directory>:
    a040:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    a044:	e59f0850 	ldr	r0, [pc, #2128]	@ a89c <loop+0x7c>
    a048:	e5901008 	ldr	r1, [r0, #8]
    a04c:	e590200c 	ldr	r2, [r0, #12]
    a050:	e5903018 	ldr	r3, [r0, #24]
    a054:	e5900020 	ldr	r0, [r0, #32]
    a058:	e2400002 	sub	r0, r0, #2
    a05c:	e0200392 	mla	r0, r2, r3, r0
    a060:	e0800001 	add	r0, r0, r1
    a064:	e2800b02 	add	r0, r0, #2048	@ 0x800
    a068:	e59f1830 	ldr	r1, [pc, #2096]	@ a8a0 <loop+0x80>
    a06c:	e5810000 	str	r0, [r1]
    a070:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000a074 <fat32_calculate_sector_from_cluster>:
    a074:	e92d4010 	push	{r4, lr}
    a078:	e59f481c 	ldr	r4, [pc, #2076]	@ a89c <loop+0x7c>
    a07c:	e5941008 	ldr	r1, [r4, #8]
    a080:	e594200c 	ldr	r2, [r4, #12]
    a084:	e5943018 	ldr	r3, [r4, #24]
    a088:	e5944004 	ldr	r4, [r4, #4]
    a08c:	e2400002 	sub	r0, r0, #2
    a090:	e0000490 	mul	r0, r0, r4
    a094:	e0200392 	mla	r0, r2, r3, r0
    a098:	e0800001 	add	r0, r0, r1
    a09c:	e2800b02 	add	r0, r0, #2048	@ 0x800
    a0a0:	e8bd8010 	pop	{r4, pc}

0000a0a4 <msd_card_init>:
    a0a4:	e92d4010 	push	{r4, lr}
    a0a8:	e59f07f4 	ldr	r0, [pc, #2036]	@ a8a4 <loop+0x84>
    a0ac:	e3a01000 	mov	r1, #0
    a0b0:	ebffff93 	bl	9f04 <spi0_init>
    a0b4:	e3a0400a 	mov	r4, #10
    a0b8:	e3a000ff 	mov	r0, #255	@ 0xff
    a0bc:	ebffffad 	bl	9f78 <spi0_byte_write>
    a0c0:	e2544001 	subs	r4, r4, #1
    a0c4:	aafffffb 	bge	a0b8 <msd_card_init+0x14>
    a0c8:	e59f07d8 	ldr	r0, [pc, #2008]	@ a8a8 <loop+0x88>
    a0cc:	e3a01006 	mov	r1, #6
    a0d0:	ebffffbb 	bl	9fc4 <spi0_bytes_write>
    a0d4:	e3500001 	cmp	r0, #1
    a0d8:	0a000002 	beq	a0e8 <msd_card_init+0x44>
    a0dc:	e3a000ff 	mov	r0, #255	@ 0xff
    a0e0:	ebffffa4 	bl	9f78 <spi0_byte_write>
    a0e4:	eafffffa 	b	a0d4 <msd_card_init+0x30>
    a0e8:	e59f07bc 	ldr	r0, [pc, #1980]	@ a8ac <loop+0x8c>
    a0ec:	e3a01006 	mov	r1, #6
    a0f0:	ebffffb3 	bl	9fc4 <spi0_bytes_write>
    a0f4:	e3500001 	cmp	r0, #1
    a0f8:	0a000002 	beq	a108 <msd_card_init+0x64>
    a0fc:	e3a000ff 	mov	r0, #255	@ 0xff
    a100:	ebffff9c 	bl	9f78 <spi0_byte_write>
    a104:	eafffffa 	b	a0f4 <msd_card_init+0x50>
    a108:	e59f07a0 	ldr	r0, [pc, #1952]	@ a8b0 <loop+0x90>
    a10c:	e3a01006 	mov	r1, #6
    a110:	ebffffab 	bl	9fc4 <spi0_bytes_write>
    a114:	e3500001 	cmp	r0, #1
    a118:	0afffffa 	beq	a108 <msd_card_init+0x64>
    a11c:	e3500000 	cmp	r0, #0
    a120:	0a000002 	beq	a130 <msd_card_init+0x8c>
    a124:	e3a000ff 	mov	r0, #255	@ 0xff
    a128:	ebffff92 	bl	9f78 <spi0_byte_write>
    a12c:	eafffff8 	b	a114 <msd_card_init+0x70>
    a130:	e59f077c 	ldr	r0, [pc, #1916]	@ a8b4 <loop+0x94>
    a134:	e3a01006 	mov	r1, #6
    a138:	ebffffa1 	bl	9fc4 <spi0_bytes_write>
    a13c:	e3500000 	cmp	r0, #0
    a140:	0a000002 	beq	a150 <msd_card_init+0xac>
    a144:	e3a000ff 	mov	r0, #255	@ 0xff
    a148:	ebffff8a 	bl	9f78 <spi0_byte_write>
    a14c:	eafffffa 	b	a13c <msd_card_init+0x98>
    a150:	e59f0760 	ldr	r0, [pc, #1888]	@ a8b8 <loop+0x98>
    a154:	e3a01006 	mov	r1, #6
    a158:	ebffff99 	bl	9fc4 <spi0_bytes_write>
    a15c:	e3500001 	cmp	r0, #1
    a160:	0afffffa 	beq	a150 <msd_card_init+0xac>
    a164:	e3500000 	cmp	r0, #0
    a168:	0a000002 	beq	a178 <msd_card_init+0xd4>
    a16c:	e3a000ff 	mov	r0, #255	@ 0xff
    a170:	ebffff80 	bl	9f78 <spi0_byte_write>
    a174:	eafffff8 	b	a15c <msd_card_init+0xb8>
    a178:	e8bd8010 	pop	{r4, pc}

0000a17c <msd_card_sector_index_write>:
    a17c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    a180:	e59f1734 	ldr	r1, [pc, #1844]	@ a8bc <loop+0x9c>
    a184:	e3a02000 	mov	r2, #0
    a188:	e3a03000 	mov	r3, #0
    a18c:	e2822001 	add	r2, r2, #1
    a190:	e7c13002 	strb	r3, [r1, r2]
    a194:	e3520004 	cmp	r2, #4
    a198:	3afffffb 	bcc	a18c <msd_card_sector_index_write+0x10>
    a19c:	e20030ff 	and	r3, r0, #255	@ 0xff
    a1a0:	e7c13002 	strb	r3, [r1, r2]
    a1a4:	e1a00420 	lsr	r0, r0, #8
    a1a8:	e2422001 	sub	r2, r2, #1
    a1ac:	e3520000 	cmp	r2, #0
    a1b0:	8afffff9 	bhi	a19c <msd_card_sector_index_write+0x20>
    a1b4:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000a1b8 <msd_card_fat32_init>:
    a1b8:	e92d4030 	push	{r4, r5, lr}
    a1bc:	e3a00b02 	mov	r0, #2048	@ 0x800
    a1c0:	ebffffed 	bl	a17c <msd_card_sector_index_write>
    a1c4:	e59f06f0 	ldr	r0, [pc, #1776]	@ a8bc <loop+0x9c>
    a1c8:	e3a01006 	mov	r1, #6
    a1cc:	ebffff7c 	bl	9fc4 <spi0_bytes_write>
    a1d0:	e35000fe 	cmp	r0, #254	@ 0xfe
    a1d4:	0a000002 	beq	a1e4 <msd_card_fat32_init+0x2c>
    a1d8:	e3a000ff 	mov	r0, #255	@ 0xff
    a1dc:	ebffff65 	bl	9f78 <spi0_byte_write>
    a1e0:	eafffffa 	b	a1d0 <msd_card_fat32_init+0x18>
    a1e4:	e3a04000 	mov	r4, #0
    a1e8:	e3a000ff 	mov	r0, #255	@ 0xff
    a1ec:	ebffff61 	bl	9f78 <spi0_byte_write>
    a1f0:	e354000b 	cmp	r4, #11
    a1f4:	e2844001 	add	r4, r4, #1
    a1f8:	1afffffa 	bne	a1e8 <msd_card_fat32_init+0x30>
    a1fc:	e1a05000 	mov	r5, r0
    a200:	e3a000ff 	mov	r0, #255	@ 0xff
    a204:	ebffff5b 	bl	9f78 <spi0_byte_write>
    a208:	e1850400 	orr	r0, r5, r0, lsl #8
    a20c:	e59f6688 	ldr	r6, [pc, #1672]	@ a89c <loop+0x7c>
    a210:	e4860004 	str	r0, [r6], #4
    a214:	e2844001 	add	r4, r4, #1
    a218:	e3a000ff 	mov	r0, #255	@ 0xff
    a21c:	ebffff55 	bl	9f78 <spi0_byte_write>
    a220:	e354000d 	cmp	r4, #13
    a224:	e2844001 	add	r4, r4, #1
    a228:	1afffffa 	bne	a218 <msd_card_fat32_init+0x60>
    a22c:	e4860004 	str	r0, [r6], #4
    a230:	e3a000ff 	mov	r0, #255	@ 0xff
    a234:	ebffff4f 	bl	9f78 <spi0_byte_write>
    a238:	e354000e 	cmp	r4, #14
    a23c:	e2844001 	add	r4, r4, #1
    a240:	1afffffa 	bne	a230 <msd_card_fat32_init+0x78>
    a244:	e1a05000 	mov	r5, r0
    a248:	e3a000ff 	mov	r0, #255	@ 0xff
    a24c:	ebffff49 	bl	9f78 <spi0_byte_write>
    a250:	e1850400 	orr	r0, r5, r0, lsl #8
    a254:	e4860004 	str	r0, [r6], #4
    a258:	e2844001 	add	r4, r4, #1
    a25c:	e3a000ff 	mov	r0, #255	@ 0xff
    a260:	ebffff44 	bl	9f78 <spi0_byte_write>
    a264:	e4860004 	str	r0, [r6], #4
    a268:	e2844001 	add	r4, r4, #1
    a26c:	e3a000ff 	mov	r0, #255	@ 0xff
    a270:	ebffff40 	bl	9f78 <spi0_byte_write>
    a274:	e2844001 	add	r4, r4, #1
    a278:	e1a05000 	mov	r5, r0
    a27c:	e3a000ff 	mov	r0, #255	@ 0xff
    a280:	ebffff3c 	bl	9f78 <spi0_byte_write>
    a284:	e2844001 	add	r4, r4, #1
    a288:	e1850400 	orr	r0, r5, r0, lsl #8
    a28c:	e4860004 	str	r0, [r6], #4
    a290:	e3a000ff 	mov	r0, #255	@ 0xff
    a294:	ebffff37 	bl	9f78 <spi0_byte_write>
    a298:	e3540020 	cmp	r4, #32
    a29c:	e2844001 	add	r4, r4, #1
    a2a0:	1afffffa 	bne	a290 <msd_card_fat32_init+0xd8>
    a2a4:	e1a05000 	mov	r5, r0
    a2a8:	e3a000ff 	mov	r0, #255	@ 0xff
    a2ac:	ebffff31 	bl	9f78 <spi0_byte_write>
    a2b0:	e1855400 	orr	r5, r5, r0, lsl #8
    a2b4:	e2844001 	add	r4, r4, #1
    a2b8:	e3a000ff 	mov	r0, #255	@ 0xff
    a2bc:	ebffff2d 	bl	9f78 <spi0_byte_write>
    a2c0:	e1855800 	orr	r5, r5, r0, lsl #16
    a2c4:	e2844001 	add	r4, r4, #1
    a2c8:	e3a000ff 	mov	r0, #255	@ 0xff
    a2cc:	ebffff29 	bl	9f78 <spi0_byte_write>
    a2d0:	e1850c00 	orr	r0, r5, r0, lsl #24
    a2d4:	e4860004 	str	r0, [r6], #4
    a2d8:	e2844001 	add	r4, r4, #1
    a2dc:	e3a000ff 	mov	r0, #255	@ 0xff
    a2e0:	ebffff24 	bl	9f78 <spi0_byte_write>
    a2e4:	e1a05000 	mov	r5, r0
    a2e8:	e2844001 	add	r4, r4, #1
    a2ec:	e3a000ff 	mov	r0, #255	@ 0xff
    a2f0:	ebffff20 	bl	9f78 <spi0_byte_write>
    a2f4:	e1855400 	orr	r5, r5, r0, lsl #8
    a2f8:	e2844001 	add	r4, r4, #1
    a2fc:	e3a000ff 	mov	r0, #255	@ 0xff
    a300:	ebffff1c 	bl	9f78 <spi0_byte_write>
    a304:	e1855800 	orr	r5, r5, r0, lsl #16
    a308:	e2844001 	add	r4, r4, #1
    a30c:	e3a000ff 	mov	r0, #255	@ 0xff
    a310:	ebffff18 	bl	9f78 <spi0_byte_write>
    a314:	e1850c00 	orr	r0, r5, r0, lsl #24
    a318:	e4860008 	str	r0, [r6], #8
    a31c:	e2844001 	add	r4, r4, #1
    a320:	e3a000ff 	mov	r0, #255	@ 0xff
    a324:	ebffff13 	bl	9f78 <spi0_byte_write>
    a328:	e354002c 	cmp	r4, #44	@ 0x2c
    a32c:	e2844001 	add	r4, r4, #1
    a330:	1afffffa 	bne	a320 <msd_card_fat32_init+0x168>
    a334:	e1a05000 	mov	r5, r0
    a338:	e3a000ff 	mov	r0, #255	@ 0xff
    a33c:	ebffff0d 	bl	9f78 <spi0_byte_write>
    a340:	e1855400 	orr	r5, r5, r0, lsl #8
    a344:	e2844001 	add	r4, r4, #1
    a348:	e3a000ff 	mov	r0, #255	@ 0xff
    a34c:	ebffff09 	bl	9f78 <spi0_byte_write>
    a350:	e1855800 	orr	r5, r5, r0, lsl #16
    a354:	e2844001 	add	r4, r4, #1
    a358:	e3a000ff 	mov	r0, #255	@ 0xff
    a35c:	ebffff05 	bl	9f78 <spi0_byte_write>
    a360:	e1850c00 	orr	r0, r5, r0, lsl #24
    a364:	e5860000 	str	r0, [r6]
    a368:	e2844001 	add	r4, r4, #1
    a36c:	e3a000ff 	mov	r0, #255	@ 0xff
    a370:	ebffff00 	bl	9f78 <spi0_byte_write>
    a374:	e2844001 	add	r4, r4, #1
    a378:	e3540c02 	cmp	r4, #512	@ 0x200
    a37c:	3afffffa 	bcc	a36c <msd_card_fat32_init+0x1b4>
    a380:	ebffff2e 	bl	a040 <fat32_calculate_root_directory>
    a384:	e8bd8030 	pop	{r4, r5, pc}

0000a388 <msd_card_sector_read>:
    a388:	e92d4070 	push	{r4, r5, r6, lr}
    a38c:	ebffff7a 	bl	a17c <msd_card_sector_index_write>
    a390:	e59f0524 	ldr	r0, [pc, #1316]	@ a8bc <loop+0x9c>
    a394:	e3a01006 	mov	r1, #6
    a398:	ebffff09 	bl	9fc4 <spi0_bytes_write>
    a39c:	e35000fe 	cmp	r0, #254	@ 0xfe
    a3a0:	0a000002 	beq	a3b0 <msd_card_sector_read+0x28>
    a3a4:	e3a000ff 	mov	r0, #255	@ 0xff
    a3a8:	ebfffef2 	bl	9f78 <spi0_byte_write>
    a3ac:	eafffffa 	b	a39c <msd_card_sector_read+0x14>
    a3b0:	e3a04c02 	mov	r4, #512	@ 0x200
    a3b4:	e2444001 	sub	r4, r4, #1
    a3b8:	e59f5500 	ldr	r5, [pc, #1280]	@ a8c0 <loop+0xa0>
    a3bc:	e3a000ff 	mov	r0, #255	@ 0xff
    a3c0:	ebfffeec 	bl	9f78 <spi0_byte_write>
    a3c4:	e5c50000 	strb	r0, [r5]
    a3c8:	e2855001 	add	r5, r5, #1
    a3cc:	e2544001 	subs	r4, r4, #1
    a3d0:	2afffff9 	bcs	a3bc <msd_card_sector_read+0x34>
    a3d4:	e59f44e4 	ldr	r4, [pc, #1252]	@ a8c0 <loop+0xa0>
    a3d8:	e3a05000 	mov	r5, #0
    a3dc:	e7d40005 	ldrb	r0, [r4, r5]
    a3e0:	e3a01010 	mov	r1, #16
    a3e4:	ebfffd20 	bl	986c <aux_mini_uart_u32_write>
    a3e8:	e3a0002c 	mov	r0, #44	@ 0x2c
    a3ec:	ebfffd03 	bl	9800 <aux_mini_uart_byte_write>
    a3f0:	e2855001 	add	r5, r5, #1
    a3f4:	e3550c02 	cmp	r5, #512	@ 0x200
    a3f8:	3afffff7 	bcc	a3dc <msd_card_sector_read+0x54>
    a3fc:	e8bd8070 	pop	{r4, r5, r6, pc}

0000a400 <msd_card_list_directories>:
    a400:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a404:	e3a05000 	mov	r5, #0
    a408:	e3a08000 	mov	r8, #0
    a40c:	e3a09000 	mov	r9, #0
    a410:	e3a0b000 	mov	fp, #0
    a414:	e59f0484 	ldr	r0, [pc, #1156]	@ a8a0 <loop+0x80>
    a418:	e5900000 	ldr	r0, [r0]
    a41c:	e0800008 	add	r0, r0, r8
    a420:	ebffffd8 	bl	a388 <msd_card_sector_read>
    a424:	e59f4494 	ldr	r4, [pc, #1172]	@ a8c0 <loop+0xa0>
    a428:	e3a05000 	mov	r5, #0
    a42c:	e7d40005 	ldrb	r0, [r4, r5]
    a430:	e3500000 	cmp	r0, #0
    a434:	0a00004c 	beq	a56c <msd_card_list_directories+0x16c>
    a438:	e35000e5 	cmp	r0, #229	@ 0xe5
    a43c:	0a000048 	beq	a564 <msd_card_list_directories+0x164>
    a440:	e285600b 	add	r6, r5, #11
    a444:	e7d40006 	ldrb	r0, [r4, r6]
    a448:	e350000f 	cmp	r0, #15
    a44c:	0a000044 	beq	a564 <msd_card_list_directories+0x164>
    a450:	e59fa46c 	ldr	sl, [pc, #1132]	@ a8c4 <loop+0xa4>
    a454:	e3a06000 	mov	r6, #0
    a458:	e0857006 	add	r7, r5, r6
    a45c:	e7d40007 	ldrb	r0, [r4, r7]
    a460:	e086700b 	add	r7, r6, fp
    a464:	e7ca0007 	strb	r0, [sl, r7]
    a468:	ebfffce4 	bl	9800 <aux_mini_uart_byte_write>
    a46c:	e2866001 	add	r6, r6, #1
    a470:	e3560008 	cmp	r6, #8
    a474:	3afffff7 	bcc	a458 <msd_card_list_directories+0x58>
    a478:	e3a0002e 	mov	r0, #46	@ 0x2e
    a47c:	ebfffcdf 	bl	9800 <aux_mini_uart_byte_write>
    a480:	e2857008 	add	r7, r5, #8
    a484:	e7d40007 	ldrb	r0, [r4, r7]
    a488:	e086700b 	add	r7, r6, fp
    a48c:	e7ca0007 	strb	r0, [sl, r7]
    a490:	ebfffcda 	bl	9800 <aux_mini_uart_byte_write>
    a494:	e2857009 	add	r7, r5, #9
    a498:	e7d40007 	ldrb	r0, [r4, r7]
    a49c:	e086700b 	add	r7, r6, fp
    a4a0:	e7ca0007 	strb	r0, [sl, r7]
    a4a4:	ebfffcd5 	bl	9800 <aux_mini_uart_byte_write>
    a4a8:	e285700a 	add	r7, r5, #10
    a4ac:	e7d40007 	ldrb	r0, [r4, r7]
    a4b0:	e086700b 	add	r7, r6, fp
    a4b4:	e7ca0007 	strb	r0, [sl, r7]
    a4b8:	ebfffcd0 	bl	9800 <aux_mini_uart_byte_write>
    a4bc:	e3a00020 	mov	r0, #32
    a4c0:	ebfffcce 	bl	9800 <aux_mini_uart_byte_write>
    a4c4:	e2856015 	add	r6, r5, #21
    a4c8:	e7d41006 	ldrb	r1, [r4, r6]
    a4cc:	e2856014 	add	r6, r5, #20
    a4d0:	e7d40006 	ldrb	r0, [r4, r6]
    a4d4:	e1801401 	orr	r1, r0, r1, lsl #8
    a4d8:	e285601b 	add	r6, r5, #27
    a4dc:	e7d42006 	ldrb	r2, [r4, r6]
    a4e0:	e285601a 	add	r6, r5, #26
    a4e4:	e7d40006 	ldrb	r0, [r4, r6]
    a4e8:	e1802402 	orr	r2, r0, r2, lsl #8
    a4ec:	e1821801 	orr	r1, r2, r1, lsl #16
    a4f0:	e285601c 	add	r6, r5, #28
    a4f4:	e7d42006 	ldrb	r2, [r4, r6]
    a4f8:	e285601d 	add	r6, r5, #29
    a4fc:	e7d40006 	ldrb	r0, [r4, r6]
    a500:	e1822400 	orr	r2, r2, r0, lsl #8
    a504:	e285601e 	add	r6, r5, #30
    a508:	e7d40006 	ldrb	r0, [r4, r6]
    a50c:	e1822800 	orr	r2, r2, r0, lsl #16
    a510:	e285601f 	add	r6, r5, #31
    a514:	e7d40006 	ldrb	r0, [r4, r6]
    a518:	e1822c00 	orr	r2, r2, r0, lsl #24
    a51c:	e28b600c 	add	r6, fp, #12
    a520:	e78a1006 	str	r1, [sl, r6]
    a524:	e28b6010 	add	r6, fp, #16
    a528:	e78a2006 	str	r2, [sl, r6]
    a52c:	e1a00001 	mov	r0, r1
    a530:	e3a01010 	mov	r1, #16
    a534:	e1a07002 	mov	r7, r2
    a538:	ebfffccb 	bl	986c <aux_mini_uart_u32_write>
    a53c:	e3a00020 	mov	r0, #32
    a540:	ebfffcae 	bl	9800 <aux_mini_uart_byte_write>
    a544:	e1a00007 	mov	r0, r7
    a548:	e3a01010 	mov	r1, #16
    a54c:	ebfffcc6 	bl	986c <aux_mini_uart_u32_write>
    a550:	e3a0000d 	mov	r0, #13
    a554:	ebfffca9 	bl	9800 <aux_mini_uart_byte_write>
    a558:	e3a0000a 	mov	r0, #10
    a55c:	ebfffca7 	bl	9800 <aux_mini_uart_byte_write>
    a560:	e28bb014 	add	fp, fp, #20
    a564:	e2855020 	add	r5, r5, #32
    a568:	eaffffaf 	b	a42c <msd_card_list_directories+0x2c>
    a56c:	e2888001 	add	r8, r8, #1
    a570:	e3550c02 	cmp	r5, #512	@ 0x200
    a574:	0affffa6 	beq	a414 <msd_card_list_directories+0x14>
    a578:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000a57c <msd_card_buffer_read>:
    a57c:	e92d4010 	push	{r4, lr}
    a580:	e59f4338 	ldr	r4, [pc, #824]	@ a8c0 <loop+0xa0>
    a584:	e0844000 	add	r4, r4, r0
    a588:	e1a03001 	mov	r3, r1
    a58c:	e3a02000 	mov	r2, #0
    a590:	e3a00000 	mov	r0, #0
    a594:	e4d41001 	ldrb	r1, [r4], #1
    a598:	e1800211 	orr	r0, r0, r1, lsl r2
    a59c:	e2822008 	add	r2, r2, #8
    a5a0:	e2533001 	subs	r3, r3, #1
    a5a4:	8afffffa 	bhi	a594 <msd_card_buffer_read+0x18>
    a5a8:	e8bd8010 	pop	{r4, pc}

0000a5ac <pwm_init>:
    a5ac:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    a5b0:	e3a00028 	mov	r0, #40	@ 0x28
    a5b4:	e3a01004 	mov	r1, #4
    a5b8:	ebfffc04 	bl	95d0 <gpio_mode_write>
    a5bc:	e3a0002d 	mov	r0, #45	@ 0x2d
    a5c0:	e3a01004 	mov	r1, #4
    a5c4:	ebfffc01 	bl	95d0 <gpio_mode_write>
    a5c8:	e3a00000 	mov	r0, #0
    a5cc:	e3800903 	orr	r0, r0, #49152	@ 0xc000
    a5d0:	e3800602 	orr	r0, r0, #2097152	@ 0x200000
    a5d4:	e3800202 	orr	r0, r0, #536870912	@ 0x20000000
    a5d8:	e3a01000 	mov	r1, #0
    a5dc:	e5801000 	str	r1, [r0]
    a5e0:	e3a01024 	mov	r1, #36	@ 0x24
    a5e4:	e3811c16 	orr	r1, r1, #5632	@ 0x1600
    a5e8:	e3811000 	orr	r1, r1, #0
    a5ec:	e3811000 	orr	r1, r1, #0
    a5f0:	e5801010 	str	r1, [r0, #16]
    a5f4:	e5801020 	str	r1, [r0, #32]
    a5f8:	e3a01061 	mov	r1, #97	@ 0x61
    a5fc:	e3811c21 	orr	r1, r1, #8448	@ 0x2100
    a600:	e3811000 	orr	r1, r1, #0
    a604:	e3811000 	orr	r1, r1, #0
    a608:	e5801000 	str	r1, [r0]
    a60c:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000a610 <pwm_write_byte>:
    a610:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    a614:	e59f12ac 	ldr	r1, [pc, #684]	@ a8c8 <loop+0xa8>
    a618:	e5810018 	str	r0, [r1, #24]
    a61c:	e5912004 	ldr	r2, [r1, #4]
    a620:	e2022001 	and	r2, r2, #1
    a624:	e3520001 	cmp	r2, #1
    a628:	1afffffb 	bne	a61c <pwm_write_byte+0xc>
    a62c:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000a630 <clock_manager_init>:
    a630:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    a634:	e3a00000 	mov	r0, #0
    a638:	e3800a01 	orr	r0, r0, #4096	@ 0x1000
    a63c:	e3800601 	orr	r0, r0, #1048576	@ 0x100000
    a640:	e3800202 	orr	r0, r0, #536870912	@ 0x20000000
    a644:	e3a01000 	mov	r1, #0
    a648:	e58010a0 	str	r1, [r0, #160]	@ 0xa0
    a64c:	e3a01000 	mov	r1, #0
    a650:	e3811901 	orr	r1, r1, #16384	@ 0x4000
    a654:	e3811000 	orr	r1, r1, #0
    a658:	e381145a 	orr	r1, r1, #1509949440	@ 0x5a000000
    a65c:	e58010a4 	str	r1, [r0, #164]	@ 0xa4
    a660:	e3a01015 	mov	r1, #21
    a664:	e3811000 	orr	r1, r1, #0
    a668:	e3811000 	orr	r1, r1, #0
    a66c:	e381145a 	orr	r1, r1, #1509949440	@ 0x5a000000
    a670:	e58010a0 	str	r1, [r0, #160]	@ 0xa0
    a674:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000a678 <main>:
    a678:	e59f024c 	ldr	r0, [pc, #588]	@ a8cc <loop+0xac>
    a67c:	e3a01003 	mov	r1, #3
    a680:	ebfffc1d 	bl	96fc <aux_mini_uart_init>
    a684:	e59f0244 	ldr	r0, [pc, #580]	@ a8d0 <loop+0xb0>
    a688:	e3a01007 	mov	r1, #7
    a68c:	ebfffc67 	bl	9830 <aux_mini_uart_write_bytes>
    a690:	e59f023c 	ldr	r0, [pc, #572]	@ a8d4 <loop+0xb4>
    a694:	e3a0100c 	mov	r1, #12
    a698:	ebfffc64 	bl	9830 <aux_mini_uart_write_bytes>
    a69c:	e59f8234 	ldr	r8, [pc, #564]	@ a8d8 <loop+0xb8>
    a6a0:	e1a00005 	mov	r0, r5
    a6a4:	e3a01013 	mov	r1, #19
    a6a8:	ebfffc60 	bl	9830 <aux_mini_uart_write_bytes>
    a6ac:	e1a00008 	mov	r0, r8
    a6b0:	e3a0101f 	mov	r1, #31
    a6b4:	ebfffc5d 	bl	9830 <aux_mini_uart_write_bytes>
    a6b8:	ebfffcd3 	bl	9a0c <interrupts_init>
    a6bc:	ebfffc9a 	bl	992c <arm_timer_init>
    a6c0:	e59f4214 	ldr	r4, [pc, #532]	@ a8dc <loop+0xbc>
    a6c4:	ebfffd1d 	bl	9b40 <framebuffer_get_dimmensions>
    a6c8:	e5840000 	str	r0, [r4]
    a6cc:	e5841004 	str	r1, [r4, #4]
    a6d0:	e59f0208 	ldr	r0, [pc, #520]	@ a8e0 <loop+0xc0>
    a6d4:	e3a01013 	mov	r1, #19
    a6d8:	ebfffc54 	bl	9830 <aux_mini_uart_write_bytes>
    a6dc:	e5940000 	ldr	r0, [r4]
    a6e0:	e3a0100a 	mov	r1, #10
    a6e4:	ebfffc60 	bl	986c <aux_mini_uart_u32_write>
    a6e8:	e3a0000d 	mov	r0, #13
    a6ec:	ebfffc43 	bl	9800 <aux_mini_uart_byte_write>
    a6f0:	e3a0000a 	mov	r0, #10
    a6f4:	ebfffc41 	bl	9800 <aux_mini_uart_byte_write>
    a6f8:	e59f01e4 	ldr	r0, [pc, #484]	@ a8e4 <loop+0xc4>
    a6fc:	e3a01012 	mov	r1, #18
    a700:	ebfffc4a 	bl	9830 <aux_mini_uart_write_bytes>
    a704:	e5940004 	ldr	r0, [r4, #4]
    a708:	e3a0100a 	mov	r1, #10
    a70c:	ebfffc56 	bl	986c <aux_mini_uart_u32_write>
    a710:	e3a0000d 	mov	r0, #13
    a714:	ebfffc39 	bl	9800 <aux_mini_uart_byte_write>
    a718:	e3a0000a 	mov	r0, #10
    a71c:	ebfffc37 	bl	9800 <aux_mini_uart_byte_write>
    a720:	e1a00005 	mov	r0, r5
    a724:	e3a01013 	mov	r1, #19
    a728:	e5940000 	ldr	r0, [r4]
    a72c:	e5941004 	ldr	r1, [r4, #4]
    a730:	e3a02020 	mov	r2, #32
    a734:	ebfffcee 	bl	9af4 <framebuffer_init>
    a738:	e59f4128 	ldr	r4, [pc, #296]	@ a868 <loop+0x48>
    a73c:	e5940020 	ldr	r0, [r4, #32]
    a740:	e5941000 	ldr	r1, [r4]
    a744:	e5942004 	ldr	r2, [r4, #4]
    a748:	e5943014 	ldr	r3, [r4, #20]
    a74c:	ebfffd0f 	bl	9b90 <canvas_options_write>
    a750:	e5940010 	ldr	r0, [r4, #16]
    a754:	ebfffd2c 	bl	9c0c <canvas_pitch_write>
    a758:	e59f0188 	ldr	r0, [pc, #392]	@ a8e8 <loop+0xc8>
    a75c:	ebfffd30 	bl	9c24 <canvas_foreground_write>
    a760:	e3a00000 	mov	r0, #0
    a764:	e3a01000 	mov	r1, #0
    a768:	e5942000 	ldr	r2, [r4]
    a76c:	e2422001 	sub	r2, r2, #1
    a770:	e5943004 	ldr	r3, [r4, #4]
    a774:	e2433001 	sub	r3, r3, #1
    a778:	ebfffd84 	bl	9d90 <canvas_fill_rect>
    a77c:	e59f0168 	ldr	r0, [pc, #360]	@ a8ec <loop+0xcc>
    a780:	ebfffd27 	bl	9c24 <canvas_foreground_write>
    a784:	e59f0148 	ldr	r0, [pc, #328]	@ a8d4 <loop+0xb4>
    a788:	e3a0100c 	mov	r1, #12
    a78c:	e3a02000 	mov	r2, #0
    a790:	e3a03000 	mov	r3, #0
    a794:	ebfffdbf 	bl	9e98 <canvas_text_draw>
    a798:	e3a06000 	mov	r6, #0
    a79c:	e3866902 	orr	r6, r6, #32768	@ 0x8000
    a7a0:	e3866000 	orr	r6, r6, #0
    a7a4:	e3866000 	orr	r6, r6, #0
    a7a8:	e3a07007 	mov	r7, #7
    a7ac:	e3877b3d 	orr	r7, r7, #62464	@ 0xf400
    a7b0:	e3877000 	orr	r7, r7, #0
    a7b4:	e3877000 	orr	r7, r7, #0
    a7b8:	e3a08040 	mov	r8, #64	@ 0x40
    a7bc:	e3888c42 	orr	r8, r8, #16896	@ 0x4200
    a7c0:	e388880f 	orr	r8, r8, #983040	@ 0xf0000
    a7c4:	e3888000 	orr	r8, r8, #0
    a7c8:	ebffff98 	bl	a630 <clock_manager_init>
    a7cc:	ebffff76 	bl	a5ac <pwm_init>
    a7d0:	e59f4118 	ldr	r4, [pc, #280]	@ a8f0 <loop+0xd0>
    a7d4:	e28440d0 	add	r4, r4, #208	@ 0xd0
    a7d8:	e59f50e8 	ldr	r5, [pc, #232]	@ a8c8 <loop+0xa8>
    a7dc:	e0d400f2 	ldrsh	r0, [r4], #2
    a7e0:	e0800006 	add	r0, r0, r6
    a7e4:	e0000790 	mul	r0, r0, r7
    a7e8:	e1a01008 	mov	r1, r8
    a7ec:	ebfffb28 	bl	9494 <math_u32_divide>
    a7f0:	e5850018 	str	r0, [r5, #24]
    a7f4:	e0d400b2 	ldrh	r0, [r4], #2
    a7f8:	e0800006 	add	r0, r0, r6
    a7fc:	e0000790 	mul	r0, r0, r7
    a800:	e1a01008 	mov	r1, r8
    a804:	ebfffb22 	bl	9494 <math_u32_divide>
    a808:	e5850018 	str	r0, [r5, #24]
    a80c:	e5950004 	ldr	r0, [r5, #4]
    a810:	e3100001 	tst	r0, #1
    a814:	1afffffc 	bne	a80c <main+0x194>
    a818:	e3540000 	cmp	r4, #0
    a81c:	1affffee 	bne	a7dc <main+0x164>

0000a820 <loop>:
    a820:	ebfffbeb 	bl	97d4 <aux_mini_uart_byte_read>
    a824:	e350000d 	cmp	r0, #13
    a828:	1bfffbf4 	blne	9800 <aux_mini_uart_byte_write>
    a82c:	1afffffb 	bne	a820 <loop>
    a830:	e3a0000d 	mov	r0, #13
    a834:	ebfffbf1 	bl	9800 <aux_mini_uart_byte_write>
    a838:	e3a0000a 	mov	r0, #10
    a83c:	ebfffbef 	bl	9800 <aux_mini_uart_byte_write>
    a840:	eafffff6 	b	a820 <loop>
    a844:	0000a900 	.word	0x0000a900
    a848:	2000b400 	.word	0x2000b400
    a84c:	0000a922 	.word	0x0000a922
    a850:	0000a93a 	.word	0x0000a93a
    a854:	0000a94e 	.word	0x0000a94e
    a858:	0000a964 	.word	0x0000a964
    a85c:	00009a48 	.word	0x00009a48
    a860:	2000b200 	.word	0x2000b200
    a864:	2000b880 	.word	0x2000b880
    a868:	0000a980 	.word	0x0000a980
    a86c:	0000a9b0 	.word	0x0000a9b0
    a870:	0000a9d0 	.word	0x0000a9d0
    a874:	0252d7d0 	.word	0x0252d7d0
    a878:	0252d7d0 	.word	0x0252d7d0
    a87c:	0252d7d4 	.word	0x0252d7d4
    a880:	0252d7d8 	.word	0x0252d7d8
    a884:	0252d7dc 	.word	0x0252d7dc
    a888:	0252d7e0 	.word	0x0252d7e0
    a88c:	0252d7e4 	.word	0x0252d7e4
    a890:	0252cfd0 	.word	0x0252cfd0
    a894:	0252d7ec 	.word	0x0252d7ec
    a898:	20204000 	.word	0x20204000
    a89c:	0252d7f0 	.word	0x0252d7f0
    a8a0:	0252d814 	.word	0x0252d814
    a8a4:	00009c40 	.word	0x00009c40
    a8a8:	0252d818 	.word	0x0252d818
    a8ac:	0252d81e 	.word	0x0252d81e
    a8b0:	0252d824 	.word	0x0252d824
    a8b4:	0252d82a 	.word	0x0252d82a
    a8b8:	0252d830 	.word	0x0252d830
    a8bc:	0252d83c 	.word	0x0252d83c
    a8c0:	0252d842 	.word	0x0252d842
    a8c4:	0252da60 	.word	0x0252da60
    a8c8:	2020c000 	.word	0x2020c000
    a8cc:	00017799 	.word	0x00017799
    a8d0:	0252da88 	.word	0x0252da88
    a8d4:	0252da90 	.word	0x0252da90
    a8d8:	0252dac4 	.word	0x0252dac4
    a8dc:	0252dbd0 	.word	0x0252dbd0
    a8e0:	0252da9d 	.word	0x0252da9d
    a8e4:	0252dab1 	.word	0x0252dab1
    a8e8:	ff333333 	.word	0xff333333
    a8ec:	ff5dc1b9 	.word	0xff5dc1b9
    a8f0:	0000aa06 	.word	0x0000aa06
