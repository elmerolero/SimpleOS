
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	e3a0d902 	mov	sp, #32768	@ 0x8000
    8004:	eafffffd 	b	8000 <_start>

00008008 <stack_Init>:
    8008:	e3a000db 	mov	r0, #219	@ 0xdb
    800c:	e129f000 	msr	CPSR_fc, r0
    8010:	e59fd038 	ldr	sp, [pc, #56]	@ 8050 <stack_Init+0x48>
    8014:	e3a000d7 	mov	r0, #215	@ 0xd7
    8018:	e129f000 	msr	CPSR_fc, r0
    801c:	e59fd030 	ldr	sp, [pc, #48]	@ 8054 <stack_Init+0x4c>
    8020:	e3a000d1 	mov	r0, #209	@ 0xd1
    8024:	e129f000 	msr	CPSR_fc, r0
    8028:	e59fd028 	ldr	sp, [pc, #40]	@ 8058 <stack_Init+0x50>
    802c:	e3a000d2 	mov	r0, #210	@ 0xd2
    8030:	e129f000 	msr	CPSR_fc, r0
    8034:	e59fd020 	ldr	sp, [pc, #32]	@ 805c <stack_Init+0x54>
    8038:	e3a000df 	mov	r0, #223	@ 0xdf
    803c:	e129f000 	msr	CPSR_fc, r0
    8040:	e59fd018 	ldr	sp, [pc, #24]	@ 8060 <stack_Init+0x58>
    8044:	e3a000d3 	mov	r0, #211	@ 0xd3
    8048:	e129f000 	msr	CPSR_fc, r0
    804c:	e12fff1e 	bx	lr
    8050:	0000a000 	.word	0x0000a000
    8054:	0000b000 	.word	0x0000b000
    8058:	0000d000 	.word	0x0000d000
    805c:	0000c000 	.word	0x0000c000
    8060:	0000e000 	.word	0x0000e000

Disassembly of section .text:

0000e000 <utils_switchRegisters>:
    e000:	e0200001 	eor	r0, r0, r1
    e004:	e0211000 	eor	r1, r1, r0
    e008:	e0200001 	eor	r0, r0, r1
    e00c:	e1a0f00e 	mov	pc, lr

0000e010 <utils_delay>:
    e010:	e2500001 	subs	r0, r0, #1
    e014:	1afffffd 	bne	e010 <utils_delay>
    e018:	e12fff1e 	bx	lr

0000e01c <math_s32_abs>:
    e01c:	e3500000 	cmp	r0, #0
    e020:	b0401000 	sublt	r1, r0, r0
    e024:	b0410000 	sublt	r0, r1, r0
    e028:	e12fff1e 	bx	lr

0000e02c <math_u32_divide>:
    e02c:	e3510000 	cmp	r1, #0
    e030:	0a000012 	beq	e080 <math_u32_divide_error>
    e034:	e1a03000 	mov	r3, r0
    e038:	e3a00000 	mov	r0, #0
    e03c:	e1530001 	cmp	r3, r1
    e040:	31a01003 	movcc	r1, r3
    e044:	312fff1e 	bxcc	lr
    e048:	e92d4070 	push	{r4, r5, r6, lr}
    e04c:	e3a02001 	mov	r2, #1
    e050:	e3a04000 	mov	r4, #0
    e054:	e1a05411 	lsl	r5, r1, r4
    e058:	e0436005 	sub	r6, r3, r5
    e05c:	e1560005 	cmp	r6, r5
    e060:	22844001 	addcs	r4, r4, #1
    e064:	2afffffa 	bcs	e054 <math_u32_divide+0x28>
    e068:	e1a03006 	mov	r3, r6
    e06c:	e1800412 	orr	r0, r0, r2, lsl r4
    e070:	e1530001 	cmp	r3, r1
    e074:	2afffff5 	bcs	e050 <math_u32_divide+0x24>
    e078:	e1a01003 	mov	r1, r3
    e07c:	e8bd8070 	pop	{r4, r5, r6, pc}

0000e080 <math_u32_divide_error>:
    e080:	e3a00000 	mov	r0, #0
    e084:	e12fff1e 	bx	lr

0000e088 <math_u32_module>:
    e088:	e3510000 	cmp	r1, #0
    e08c:	0a00000d 	beq	e0c8 <math_u32_module_error>
    e090:	e1500001 	cmp	r0, r1
    e094:	312fff1e 	bxcc	lr
    e098:	e92d4070 	push	{r4, r5, r6, lr}
    e09c:	e3a02001 	mov	r2, #1
    e0a0:	e3a04000 	mov	r4, #0
    e0a4:	e1a05411 	lsl	r5, r1, r4
    e0a8:	e0406005 	sub	r6, r0, r5
    e0ac:	e1560005 	cmp	r6, r5
    e0b0:	82844001 	addhi	r4, r4, #1
    e0b4:	8afffffa 	bhi	e0a4 <math_u32_module+0x1c>
    e0b8:	e1a00006 	mov	r0, r6
    e0bc:	e1500001 	cmp	r0, r1
    e0c0:	2afffff6 	bcs	e0a0 <math_u32_module+0x18>
    e0c4:	e8bd8070 	pop	{r4, r5, r6, pc}

0000e0c8 <math_u32_module_error>:
    e0c8:	e3a00000 	mov	r0, #0
    e0cc:	e12fff1e 	bx	lr

0000e0d0 <math_s32_divide>:
    e0d0:	e92d4010 	push	{r4, lr}
    e0d4:	e3510000 	cmp	r1, #0
    e0d8:	0a00000d 	beq	e114 <math_s32_divide_error>
    e0dc:	e1a03fc0 	asr	r3, r0, #31
    e0e0:	e0204003 	eor	r4, r0, r3
    e0e4:	e0444003 	sub	r4, r4, r3
    e0e8:	e1a02fc1 	asr	r2, r1, #31
    e0ec:	e0213002 	eor	r3, r1, r2
    e0f0:	e0433002 	sub	r3, r3, r2
    e0f4:	e1a00004 	mov	r0, r4
    e0f8:	e1a01003 	mov	r1, r3
    e0fc:	ebffffca 	bl	e02c <math_u32_divide>
    e100:	e0202fc4 	eor	r2, r0, r4, asr #31
    e104:	42600000 	rsbmi	r0, r0, #0
    e108:	e0212fc4 	eor	r2, r1, r4, asr #31
    e10c:	42611000 	rsbmi	r1, r1, #0
    e110:	e8bd8010 	pop	{r4, pc}

0000e114 <math_s32_divide_error>:
    e114:	e3a00000 	mov	r0, #0
    e118:	e3a01000 	mov	r1, #0
    e11c:	e8bd8010 	pop	{r4, pc}

0000e120 <math_s32_module>:
    e120:	e92d4010 	push	{r4, lr}
    e124:	e3510000 	cmp	r1, #0
    e128:	0a00000c 	beq	e160 <math_s32_module_error>
    e12c:	e1a03fc0 	asr	r3, r0, #31
    e130:	e0204003 	eor	r4, r0, r3
    e134:	e0444003 	sub	r4, r4, r3
    e138:	e1a02fc1 	asr	r2, r1, #31
    e13c:	e0213002 	eor	r3, r1, r2
    e140:	e0433002 	sub	r3, r3, r2
    e144:	e1a00004 	mov	r0, r4
    e148:	e1a01003 	mov	r1, r3
    e14c:	ebffffb6 	bl	e02c <math_u32_divide>
    e150:	e1a02fc0 	asr	r2, r0, #31
    e154:	e0210002 	eor	r0, r1, r2
    e158:	42410000 	submi	r0, r1, #0
    e15c:	e8bd8010 	pop	{r4, pc}

0000e160 <math_s32_module_error>:
    e160:	e3a00000 	mov	r0, #0
    e164:	e8bd8010 	pop	{r4, pc}

0000e168 <gpio_ModeSet>:
    e168:	e3500035 	cmp	r0, #53	@ 0x35
    e16c:	93510007 	cmpls	r1, #7
    e170:	8a000012 	bhi	e1c0 <gpio_ModeSet+0x58>
    e174:	e92d4010 	push	{r4, lr}
    e178:	e1a02000 	mov	r2, r0
    e17c:	e1a03001 	mov	r3, r1
    e180:	e3a00001 	mov	r0, #1
    e184:	eb000044 	bl	e29c <devices_AddressGet>
    e188:	e352000a 	cmp	r2, #10
    e18c:	4a000002 	bmi	e19c <gpio_ModeSet+0x34>
    e190:	e2800004 	add	r0, r0, #4
    e194:	e242200a 	sub	r2, r2, #10
    e198:	eafffffa 	b	e188 <gpio_ModeSet+0x20>
    e19c:	e0822082 	add	r2, r2, r2, lsl #1
    e1a0:	e5901000 	ldr	r1, [r0]
    e1a4:	e3a04007 	mov	r4, #7
    e1a8:	e1e04214 	mvn	r4, r4, lsl r2
    e1ac:	e0011004 	and	r1, r1, r4
    e1b0:	e1811213 	orr	r1, r1, r3, lsl r2
    e1b4:	e5801000 	str	r1, [r0]
    e1b8:	e3a00000 	mov	r0, #0
    e1bc:	ea000000 	b	e1c4 <gpio_ModeSet+0x5c>
    e1c0:	e3e00000 	mvn	r0, #0
    e1c4:	e8bd8010 	pop	{r4, pc}

0000e1c8 <gpio_pud_mode_write>:
    e1c8:	e3500007 	cmp	r0, #7
    e1cc:	83e00000 	mvnhi	r0, #0
    e1d0:	812fff1e 	bxhi	lr
    e1d4:	e3510002 	cmp	r1, #2
    e1d8:	83e01001 	mvnhi	r1, #1
    e1dc:	812fff1e 	bxhi	lr
    e1e0:	e92d4070 	push	{r4, r5, r6, lr}
    e1e4:	e1a04001 	mov	r4, r1
    e1e8:	e1a00004 	mov	r0, r4
    e1ec:	e3a01020 	mov	r1, #32
    e1f0:	ebffff8d 	bl	e02c <math_u32_divide>
    e1f4:	e1a05000 	mov	r5, r0
    e1f8:	e1a06001 	mov	r6, r1
    e1fc:	e3a00001 	mov	r0, #1
    e200:	eb000025 	bl	e29c <devices_AddressGet>
    e204:	e5804094 	str	r4, [r0, #148]	@ 0x94
    e208:	e1a03105 	lsl	r3, r5, #2
    e20c:	e2832098 	add	r2, r3, #152	@ 0x98
    e210:	e3a03001 	mov	r3, #1
    e214:	e1a03613 	lsl	r3, r3, r6
    e218:	e7803002 	str	r3, [r0, r2]
    e21c:	e3a00096 	mov	r0, #150	@ 0x96
    e220:	ebffff7a 	bl	e010 <utils_delay>
    e224:	e3a00001 	mov	r0, #1
    e228:	eb00001b 	bl	e29c <devices_AddressGet>
    e22c:	e3a03000 	mov	r3, #0
    e230:	e5803094 	str	r3, [r0, #148]	@ 0x94
    e234:	e7803002 	str	r3, [r0, r2]
    e238:	e3a00000 	mov	r0, #0
    e23c:	e8bd8070 	pop	{r4, r5, r6, pc}

0000e240 <gpio_PinSet>:
    e240:	e3500035 	cmp	r0, #53	@ 0x35
    e244:	83e00000 	mvnhi	r0, #0
    e248:	812fff1e 	bxhi	lr
    e24c:	e92d4030 	push	{r4, r5, lr}
    e250:	e2014001 	and	r4, r1, #1
    e254:	e3a01020 	mov	r1, #32
    e258:	ebffff73 	bl	e02c <math_u32_divide>
    e25c:	e1a00100 	lsl	r0, r0, #2
    e260:	e3a03001 	mov	r3, #1
    e264:	e1a05113 	lsl	r5, r3, r1
    e268:	e3540000 	cmp	r4, #0
    e26c:	02802028 	addeq	r2, r0, #40	@ 0x28
    e270:	1280201c 	addne	r2, r0, #28
    e274:	e3a00001 	mov	r0, #1
    e278:	eb000007 	bl	e29c <devices_AddressGet>
    e27c:	e7903002 	ldr	r3, [r0, r2]
    e280:	e1833005 	orr	r3, r3, r5
    e284:	e7803002 	str	r3, [r0, r2]
    e288:	e8bd4030 	pop	{r4, r5, lr}

0000e28c <system_CoreFreqGet>:
    e28c:	e59f021c 	ldr	r0, [pc, #540]	@ e4b0 <mu_MaxBaudRate+0x4>
    e290:	e5900000 	ldr	r0, [r0]
    e294:	e12fff1e 	bx	lr

0000e298 <system_CoreFreq>:
    e298:	0ee6b280 	.word	0x0ee6b280

0000e29c <devices_AddressGet>:
    e29c:	e59f1210 	ldr	r1, [pc, #528]	@ e4b4 <mu_MaxBaudRate+0x8>
    e2a0:	e7910100 	ldr	r0, [r1, r0, lsl #2]
    e2a4:	e12fff1e 	bx	lr

0000e2a8 <auxiliary_Enable>:
    e2a8:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    e2ac:	e2002007 	and	r2, r0, #7
    e2b0:	e3a00002 	mov	r0, #2
    e2b4:	ebfffff8 	bl	e29c <devices_AddressGet>
    e2b8:	e5901004 	ldr	r1, [r0, #4]
    e2bc:	e1811002 	orr	r1, r1, r2
    e2c0:	e5801004 	str	r1, [r0, #4]
    e2c4:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000e2c8 <uart0_Init>:
    e2c8:	e59f31e8 	ldr	r3, [pc, #488]	@ e4b8 <mu_MaxBaudRate+0xc>
    e2cc:	e5933000 	ldr	r3, [r3]
    e2d0:	e1500003 	cmp	r0, r3
    e2d4:	93510003 	cmpls	r1, #3
    e2d8:	812fff1e 	bxhi	lr
    e2dc:	e92d4070 	push	{r4, r5, r6, lr}
    e2e0:	e1a04000 	mov	r4, r0
    e2e4:	e1a05001 	mov	r5, r1
    e2e8:	e1a06002 	mov	r6, r2
    e2ec:	e3a0000e 	mov	r0, #14
    e2f0:	e3a01002 	mov	r1, #2
    e2f4:	ebffff9b 	bl	e168 <gpio_ModeSet>
    e2f8:	e3a0000f 	mov	r0, #15
    e2fc:	e3a01002 	mov	r1, #2
    e300:	ebffff98 	bl	e168 <gpio_ModeSet>
    e304:	e3a0000e 	mov	r0, #14
    e308:	e3a01000 	mov	r1, #0
    e30c:	ebffffad 	bl	e1c8 <gpio_pud_mode_write>
    e310:	e3a0000f 	mov	r0, #15
    e314:	e3a01000 	mov	r1, #0
    e318:	ebffffaa 	bl	e1c8 <gpio_pud_mode_write>
    e31c:	ebffffda 	bl	e28c <system_CoreFreqGet>
    e320:	e1a01184 	lsl	r1, r4, #3
    e324:	ebffff40 	bl	e02c <math_u32_divide>
    e328:	e2400001 	sub	r0, r0, #1
    e32c:	e1a03000 	mov	r3, r0
    e330:	e3a00001 	mov	r0, #1
    e334:	ebffffdb 	bl	e2a8 <auxiliary_Enable>
    e338:	e3a02000 	mov	r2, #0
    e33c:	e5802044 	str	r2, [r0, #68]	@ 0x44
    e340:	e3a02000 	mov	r2, #0
    e344:	e5802060 	str	r2, [r0, #96]	@ 0x60
    e348:	e580504c 	str	r5, [r0, #76]	@ 0x4c
    e34c:	e3a02000 	mov	r2, #0
    e350:	e5802050 	str	r2, [r0, #80]	@ 0x50
    e354:	e2062003 	and	r2, r6, #3
    e358:	e5802048 	str	r2, [r0, #72]	@ 0x48
    e35c:	e5803068 	str	r3, [r0, #104]	@ 0x68
    e360:	e3a02003 	mov	r2, #3
    e364:	e5802060 	str	r2, [r0, #96]	@ 0x60
    e368:	e8bd8070 	pop	{r4, r5, r6, pc}

0000e36c <uart0_read>:
    e36c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    e370:	e3a00002 	mov	r0, #2
    e374:	ebffffc8 	bl	e29c <devices_AddressGet>
    e378:	e5901054 	ldr	r1, [r0, #84]	@ 0x54
    e37c:	e3110001 	tst	r1, #1
    e380:	0afffffc 	beq	e378 <uart0_read+0xc>
    e384:	e5900040 	ldr	r0, [r0, #64]	@ 0x40
    e388:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000e38c <uart0_write>:
    e38c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    e390:	e20020ff 	and	r2, r0, #255	@ 0xff
    e394:	e3a00002 	mov	r0, #2
    e398:	ebffffbf 	bl	e29c <devices_AddressGet>
    e39c:	e5901054 	ldr	r1, [r0, #84]	@ 0x54
    e3a0:	e3110020 	tst	r1, #32
    e3a4:	0afffffc 	beq	e39c <uart0_write+0x10>
    e3a8:	e5802040 	str	r2, [r0, #64]	@ 0x40
    e3ac:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0000e3b0 <uart0_write_bytes>:
    e3b0:	e92d4030 	push	{r4, r5, lr}
    e3b4:	e1a03000 	mov	r3, r0
    e3b8:	e1a04001 	mov	r4, r1
    e3bc:	e3a05000 	mov	r5, #0
    e3c0:	e1530005 	cmp	r3, r5
    e3c4:	0a000007 	beq	e3e8 <uart0_write_bytes+0x38>
    e3c8:	e1550004 	cmp	r5, r4
    e3cc:	2a000005 	bcs	e3e8 <uart0_write_bytes+0x38>
    e3d0:	e7d30005 	ldrb	r0, [r3, r5]
    e3d4:	e3500000 	cmp	r0, #0
    e3d8:	0a000002 	beq	e3e8 <uart0_write_bytes+0x38>
    e3dc:	ebffffea 	bl	e38c <uart0_write>
    e3e0:	e2855001 	add	r5, r5, #1
    e3e4:	eafffff7 	b	e3c8 <uart0_write_bytes+0x18>
    e3e8:	e8bd8030 	pop	{r4, r5, pc}

0000e3ec <uart0_u32_write>:
    e3ec:	e3510010 	cmp	r1, #16
    e3f0:	812fff1e 	bxhi	lr
    e3f4:	e92d4070 	push	{r4, r5, r6, lr}
    e3f8:	e1a04000 	mov	r4, r0
    e3fc:	e1a05001 	mov	r5, r1
    e400:	e59f60b4 	ldr	r6, [pc, #180]	@ e4bc <mu_MaxBaudRate+0x10>
    e404:	e3a00000 	mov	r0, #0
    e408:	e4c60001 	strb	r0, [r6], #1
    e40c:	e1a00004 	mov	r0, r4
    e410:	e1a01005 	mov	r1, r5
    e414:	ebffff04 	bl	e02c <math_u32_divide>
    e418:	e1a04000 	mov	r4, r0
    e41c:	e1a00001 	mov	r0, r1
    e420:	e3500009 	cmp	r0, #9
    e424:	82800007 	addhi	r0, r0, #7
    e428:	e2800030 	add	r0, r0, #48	@ 0x30
    e42c:	e4c60001 	strb	r0, [r6], #1
    e430:	e3340000 	teq	r4, #0
    e434:	1afffff4 	bne	e40c <uart0_u32_write+0x20>
    e438:	e5760001 	ldrb	r0, [r6, #-1]!
    e43c:	e3500000 	cmp	r0, #0
    e440:	1bffffd1 	blne	e38c <uart0_write>
    e444:	1afffffb 	bne	e438 <uart0_u32_write+0x4c>
    e448:	e8bd8070 	pop	{r4, r5, r6, pc}

0000e44c <uart0_s32_write>:
    e44c:	e92d4070 	push	{r4, r5, r6, lr}
    e450:	e1a04000 	mov	r4, r0
    e454:	e3500000 	cmp	r0, #0
    e458:	b3a0002d 	movlt	r0, #45	@ 0x2d
    e45c:	ebffffca 	bl	e38c <uart0_write>
    e460:	e59f6054 	ldr	r6, [pc, #84]	@ e4bc <mu_MaxBaudRate+0x10>
    e464:	e3a00000 	mov	r0, #0
    e468:	e4c60001 	strb	r0, [r6], #1
    e46c:	e1a00004 	mov	r0, r4
    e470:	e3a0100a 	mov	r1, #10
    e474:	ebffff15 	bl	e0d0 <math_s32_divide>
    e478:	e1a04000 	mov	r4, r0
    e47c:	e1a00001 	mov	r0, r1
    e480:	ebfffee5 	bl	e01c <math_s32_abs>
    e484:	e2800030 	add	r0, r0, #48	@ 0x30
    e488:	e20000ff 	and	r0, r0, #255	@ 0xff
    e48c:	e4c60001 	strb	r0, [r6], #1
    e490:	e3340000 	teq	r4, #0
    e494:	1afffff4 	bne	e46c <uart0_s32_write+0x20>
    e498:	e5760001 	ldrb	r0, [r6, #-1]!
    e49c:	e3500000 	cmp	r0, #0
    e4a0:	1bffffb9 	blne	e38c <uart0_write>
    e4a4:	1afffffb 	bne	e498 <uart0_s32_write+0x4c>
    e4a8:	e8bd8070 	pop	{r4, r5, r6, pc}

0000e4ac <mu_MaxBaudRate>:
    e4ac:	01dcd650 	.word	0x01dcd650
    e4b0:	0000e298 	.word	0x0000e298
    e4b4:	0000f000 	.word	0x0000f000
    e4b8:	0000e4ac 	.word	0x0000e4ac
    e4bc:	0000f00c 	.word	0x0000f00c
