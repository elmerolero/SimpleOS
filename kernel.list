
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	e3a0d902 	mov	sp, #32768	@ 0x8000
    8004:	eb00002f 	bl	80c8 <mmu_Init>
    8008:	eb00001b 	bl	807c <stack_Init>
    800c:	eb00004c 	bl	8144 <interrupts_Init>
    8010:	e3a00a02 	mov	r0, #8192	@ 0x2000
    8014:	e2800b01 	add	r0, r0, #1024	@ 0x400
    8018:	e2800d06 	add	r0, r0, #384	@ 0x180
    801c:	e2800c01 	add	r0, r0, #256	@ 0x100
    8020:	e2800080 	add	r0, r0, #128	@ 0x80
    8024:	e3a01003 	mov	r1, #3
    8028:	e3a02003 	mov	r2, #3
    802c:	eb0038a5 	bl	162c8 <uart0_Init>
    8030:	e3a00041 	mov	r0, #65	@ 0x41
    8034:	eb0038d4 	bl	1638c <uart0_write>
    8038:	e3a0000d 	mov	r0, #13
    803c:	eb0038d2 	bl	1638c <uart0_write>
    8040:	e3a0000a 	mov	r0, #10
    8044:	eb0038d0 	bl	1638c <uart0_write>
    8048:	e59f0074 	ldr	r0, [pc, #116]	@ 80c4 <start_addr>
    804c:	e3a01010 	mov	r1, #16
    8050:	eb0038e5 	bl	163ec <uart0_u32_write>
    8054:	eaffffff 	b	8058 <loop>

00008058 <loop>:
    8058:	eb0038c3 	bl	1636c <uart0_read>
    805c:	e350000d 	cmp	r0, #13
    8060:	1b0038c9 	blne	1638c <uart0_write>
    8064:	1afffffb 	bne	8058 <loop>
    8068:	e3a0000d 	mov	r0, #13
    806c:	eb0038c6 	bl	1638c <uart0_write>
    8070:	e3a0000a 	mov	r0, #10
    8074:	eb0038c4 	bl	1638c <uart0_write>
    8078:	eafffff6 	b	8058 <loop>

0000807c <stack_Init>:
    807c:	e3a000db 	mov	r0, #219	@ 0xdb
    8080:	e129f000 	msr	CPSR_fc, r0
    8084:	e59fd138 	ldr	sp, [pc, #312]	@ 81c4 <_interrupt_fast_request+0x4>
    8088:	e3a000d7 	mov	r0, #215	@ 0xd7
    808c:	e129f000 	msr	CPSR_fc, r0
    8090:	e59fd130 	ldr	sp, [pc, #304]	@ 81c8 <_interrupt_fast_request+0x8>
    8094:	e3a000d1 	mov	r0, #209	@ 0xd1
    8098:	e129f000 	msr	CPSR_fc, r0
    809c:	e59fd128 	ldr	sp, [pc, #296]	@ 81cc <_interrupt_fast_request+0xc>
    80a0:	e3a000d2 	mov	r0, #210	@ 0xd2
    80a4:	e129f000 	msr	CPSR_fc, r0
    80a8:	e59fd120 	ldr	sp, [pc, #288]	@ 81d0 <_interrupt_fast_request+0x10>
    80ac:	e3a000df 	mov	r0, #223	@ 0xdf
    80b0:	e129f000 	msr	CPSR_fc, r0
    80b4:	e59fd118 	ldr	sp, [pc, #280]	@ 81d4 <_interrupt_fast_request+0x14>
    80b8:	e3a000d3 	mov	r0, #211	@ 0xd3
    80bc:	e129f000 	msr	CPSR_fc, r0
    80c0:	e12fff1e 	bx	lr

000080c4 <start_addr>:
    80c4:	00008110 	.word	0x00008110

000080c8 <mmu_Init>:
    80c8:	e59f003c 	ldr	r0, [pc, #60]	@ 810c <start_main_addr>
    80cc:	e59f1040 	ldr	r1, [pc, #64]	@ 8114 <main_table>
    80d0:	e5801000 	str	r1, [r0]
    80d4:	e59f1034 	ldr	r1, [pc, #52]	@ 8110 <start_second_addr>
    80d8:	e59f2038 	ldr	r2, [pc, #56]	@ 8118 <secondary_table>
    80dc:	e3a04000 	mov	r4, #0
    80e0:	e7923104 	ldr	r3, [r2, r4, lsl #2]
    80e4:	e7813104 	str	r3, [r1, r4, lsl #2]
    80e8:	e2844001 	add	r4, r4, #1
    80ec:	e354000a 	cmp	r4, #10
    80f0:	9afffffa 	bls	80e0 <mmu_Init+0x18>
    80f4:	e12fff1e 	bx	lr

000080f8 <mmu_setTTBR>:
    80f8:	ee020f10 	mcr	15, 0, r0, cr2, cr0, {0}
    80fc:	e1a0f00e 	mov	pc, lr

00008100 <mmu_flushTLB>:
    8100:	e3a00000 	mov	r0, #0
    8104:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
    8108:	e1a0f00e 	mov	pc, lr

0000810c <start_main_addr>:
    810c:	0000c000 	.word	0x0000c000

00008110 <start_second_addr>:
    8110:	00010000 	.word	0x00010000

00008114 <main_table>:
    8114:	00010001 	.word	0x00010001

00008118 <secondary_table>:
    8118:	00017c0a 	.word	0x00017c0a
    811c:	00011c0a 	.word	0x00011c0a
    8120:	00012c0a 	.word	0x00012c0a
    8124:	00013c0a 	.word	0x00013c0a
    8128:	00014c0a 	.word	0x00014c0a
    812c:	00015c0a 	.word	0x00015c0a
    8130:	00016c0a 	.word	0x00016c0a
    8134:	2000b01e 	.word	0x2000b01e
    8138:	00008c0a 	.word	0x00008c0a
    813c:	2020001e 	.word	0x2020001e
    8140:	2021501e 	.word	0x2021501e

00008144 <interrupts_Init>:
    8144:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8148:	e59f0088 	ldr	r0, [pc, #136]	@ 81d8 <_interrupt_fast_request+0x18>
    814c:	e3a01000 	mov	r1, #0
    8150:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8154:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8158:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    815c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8160:	e3a00000 	mov	r0, #0
    8164:	eb00384c 	bl	1629c <devices_AddressGet>
    8168:	e3a01001 	mov	r1, #1
    816c:	e5801018 	str	r1, [r0, #24]
    8170:	e10f0000 	mrs	r0, CPSR
    8174:	e3c00080 	bic	r0, r0, #128	@ 0x80
    8178:	e121f000 	msr	CPSR_c, r0
    817c:	f1080080 	cpsie	i
    8180:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

00008184 <interrupt_vector_table>:
    8184:	e59ff018 	ldr	pc, [pc, #24]	@ 81a4 <_interrupt_reset>
    8188:	e59ff018 	ldr	pc, [pc, #24]	@ 81a8 <_interrupt_undefined>
    818c:	e59ff018 	ldr	pc, [pc, #24]	@ 81ac <_interrupt_software>
    8190:	e59ff018 	ldr	pc, [pc, #24]	@ 81b0 <_interrupt_prefetch_abort>
    8194:	e59ff018 	ldr	pc, [pc, #24]	@ 81b4 <_interrupt_data_abort>
    8198:	e59ff018 	ldr	pc, [pc, #24]	@ 81b8 <_interrupt_unused>
    819c:	e59ff018 	ldr	pc, [pc, #24]	@ 81bc <_interrupt_request>
    81a0:	e59ff018 	ldr	pc, [pc, #24]	@ 81c0 <_interrupt_fast_request>

000081a4 <_interrupt_reset>:
    81a4:	000164b0 	.word	0x000164b0

000081a8 <_interrupt_undefined>:
    81a8:	000164b8 	.word	0x000164b8

000081ac <_interrupt_software>:
    81ac:	000164e0 	.word	0x000164e0

000081b0 <_interrupt_prefetch_abort>:
    81b0:	000164f4 	.word	0x000164f4

000081b4 <_interrupt_data_abort>:
    81b4:	0001651c 	.word	0x0001651c

000081b8 <_interrupt_unused>:
    81b8:	000164b4 	.word	0x000164b4

000081bc <_interrupt_request>:
    81bc:	00016520 	.word	0x00016520

000081c0 <_interrupt_fast_request>:
    81c0:	0001654c 	.word	0x0001654c
    81c4:	00002000 	.word	0x00002000
    81c8:	00003000 	.word	0x00003000
    81cc:	00005000 	.word	0x00005000
    81d0:	00004000 	.word	0x00004000
    81d4:	00006000 	.word	0x00006000
    81d8:	00008184 	.word	0x00008184

Disassembly of section .text:

00016000 <math_s32_abs>:
   16000:	e3500000 	cmp	r0, #0
   16004:	b0401000 	sublt	r1, r0, r0
   16008:	b0410000 	sublt	r0, r1, r0
   1600c:	e12fff1e 	bx	lr

00016010 <math_u32_divide>:
   16010:	e3510000 	cmp	r1, #0
   16014:	0a000012 	beq	16064 <math_u32_divide_error>
   16018:	e1a03000 	mov	r3, r0
   1601c:	e3a00000 	mov	r0, #0
   16020:	e1530001 	cmp	r3, r1
   16024:	31a01003 	movcc	r1, r3
   16028:	312fff1e 	bxcc	lr
   1602c:	e92d4070 	push	{r4, r5, r6, lr}
   16030:	e3a02001 	mov	r2, #1
   16034:	e3a04000 	mov	r4, #0
   16038:	e1a05411 	lsl	r5, r1, r4
   1603c:	e0436005 	sub	r6, r3, r5
   16040:	e1560005 	cmp	r6, r5
   16044:	22844001 	addcs	r4, r4, #1
   16048:	2afffffa 	bcs	16038 <math_u32_divide+0x28>
   1604c:	e1a03006 	mov	r3, r6
   16050:	e1800412 	orr	r0, r0, r2, lsl r4
   16054:	e1530001 	cmp	r3, r1
   16058:	2afffff5 	bcs	16034 <math_u32_divide+0x24>
   1605c:	e1a01003 	mov	r1, r3
   16060:	e8bd8070 	pop	{r4, r5, r6, pc}

00016064 <math_u32_divide_error>:
   16064:	e3a00000 	mov	r0, #0
   16068:	e12fff1e 	bx	lr

0001606c <math_u32_module>:
   1606c:	e3510000 	cmp	r1, #0
   16070:	0a00000d 	beq	160ac <math_u32_module_error>
   16074:	e1500001 	cmp	r0, r1
   16078:	312fff1e 	bxcc	lr
   1607c:	e92d4070 	push	{r4, r5, r6, lr}
   16080:	e3a02001 	mov	r2, #1
   16084:	e3a04000 	mov	r4, #0
   16088:	e1a05411 	lsl	r5, r1, r4
   1608c:	e0406005 	sub	r6, r0, r5
   16090:	e1560005 	cmp	r6, r5
   16094:	82844001 	addhi	r4, r4, #1
   16098:	8afffffa 	bhi	16088 <math_u32_module+0x1c>
   1609c:	e1a00006 	mov	r0, r6
   160a0:	e1500001 	cmp	r0, r1
   160a4:	2afffff6 	bcs	16084 <math_u32_module+0x18>
   160a8:	e8bd8070 	pop	{r4, r5, r6, pc}

000160ac <math_u32_module_error>:
   160ac:	e3a00000 	mov	r0, #0
   160b0:	e12fff1e 	bx	lr

000160b4 <math_s32_divide>:
   160b4:	e92d4010 	push	{r4, lr}
   160b8:	e3510000 	cmp	r1, #0
   160bc:	0a00000d 	beq	160f8 <math_s32_divide_error>
   160c0:	e1a03fc0 	asr	r3, r0, #31
   160c4:	e0204003 	eor	r4, r0, r3
   160c8:	e0444003 	sub	r4, r4, r3
   160cc:	e1a02fc1 	asr	r2, r1, #31
   160d0:	e0213002 	eor	r3, r1, r2
   160d4:	e0433002 	sub	r3, r3, r2
   160d8:	e1a00004 	mov	r0, r4
   160dc:	e1a01003 	mov	r1, r3
   160e0:	ebffffca 	bl	16010 <math_u32_divide>
   160e4:	e0202fc4 	eor	r2, r0, r4, asr #31
   160e8:	42600000 	rsbmi	r0, r0, #0
   160ec:	e0212fc4 	eor	r2, r1, r4, asr #31
   160f0:	42611000 	rsbmi	r1, r1, #0
   160f4:	e8bd8010 	pop	{r4, pc}

000160f8 <math_s32_divide_error>:
   160f8:	e3a00000 	mov	r0, #0
   160fc:	e3a01000 	mov	r1, #0
   16100:	e8bd8010 	pop	{r4, pc}

00016104 <math_s32_module>:
   16104:	e92d4010 	push	{r4, lr}
   16108:	e3510000 	cmp	r1, #0
   1610c:	0a00000c 	beq	16144 <math_s32_module_error>
   16110:	e1a03fc0 	asr	r3, r0, #31
   16114:	e0204003 	eor	r4, r0, r3
   16118:	e0444003 	sub	r4, r4, r3
   1611c:	e1a02fc1 	asr	r2, r1, #31
   16120:	e0213002 	eor	r3, r1, r2
   16124:	e0433002 	sub	r3, r3, r2
   16128:	e1a00004 	mov	r0, r4
   1612c:	e1a01003 	mov	r1, r3
   16130:	ebffffb6 	bl	16010 <math_u32_divide>
   16134:	e1a02fc0 	asr	r2, r0, #31
   16138:	e0210002 	eor	r0, r1, r2
   1613c:	42410000 	submi	r0, r1, #0
   16140:	e8bd8010 	pop	{r4, pc}

00016144 <math_s32_module_error>:
   16144:	e3a00000 	mov	r0, #0
   16148:	e8bd8010 	pop	{r4, pc}

0001614c <utils_switchRegisters>:
   1614c:	e0200001 	eor	r0, r0, r1
   16150:	e0211000 	eor	r1, r1, r0
   16154:	e0200001 	eor	r0, r0, r1
   16158:	e1a0f00e 	mov	pc, lr

0001615c <utils_delay>:
   1615c:	e2500001 	subs	r0, r0, #1
   16160:	1afffffd 	bne	1615c <utils_delay>
   16164:	e12fff1e 	bx	lr

00016168 <gpio_ModeSet>:
   16168:	e3500035 	cmp	r0, #53	@ 0x35
   1616c:	93510007 	cmpls	r1, #7
   16170:	8a000012 	bhi	161c0 <gpio_ModeSet+0x58>
   16174:	e92d4010 	push	{r4, lr}
   16178:	e1a02000 	mov	r2, r0
   1617c:	e1a03001 	mov	r3, r1
   16180:	e3a00001 	mov	r0, #1
   16184:	eb000044 	bl	1629c <devices_AddressGet>
   16188:	e352000a 	cmp	r2, #10
   1618c:	4a000002 	bmi	1619c <gpio_ModeSet+0x34>
   16190:	e2800004 	add	r0, r0, #4
   16194:	e242200a 	sub	r2, r2, #10
   16198:	eafffffa 	b	16188 <gpio_ModeSet+0x20>
   1619c:	e0822082 	add	r2, r2, r2, lsl #1
   161a0:	e5901000 	ldr	r1, [r0]
   161a4:	e3a04007 	mov	r4, #7
   161a8:	e1e04214 	mvn	r4, r4, lsl r2
   161ac:	e0011004 	and	r1, r1, r4
   161b0:	e1811213 	orr	r1, r1, r3, lsl r2
   161b4:	e5801000 	str	r1, [r0]
   161b8:	e3a00000 	mov	r0, #0
   161bc:	ea000000 	b	161c4 <gpio_ModeSet+0x5c>
   161c0:	e3e00000 	mvn	r0, #0
   161c4:	e8bd8010 	pop	{r4, pc}

000161c8 <gpio_pud_mode_write>:
   161c8:	e3500007 	cmp	r0, #7
   161cc:	83e00000 	mvnhi	r0, #0
   161d0:	812fff1e 	bxhi	lr
   161d4:	e3510002 	cmp	r1, #2
   161d8:	83e01001 	mvnhi	r1, #1
   161dc:	812fff1e 	bxhi	lr
   161e0:	e92d4070 	push	{r4, r5, r6, lr}
   161e4:	e1a04001 	mov	r4, r1
   161e8:	e1a00004 	mov	r0, r4
   161ec:	e3a01020 	mov	r1, #32
   161f0:	ebffff86 	bl	16010 <math_u32_divide>
   161f4:	e1a05000 	mov	r5, r0
   161f8:	e1a06001 	mov	r6, r1
   161fc:	e3a00001 	mov	r0, #1
   16200:	eb000025 	bl	1629c <devices_AddressGet>
   16204:	e5804094 	str	r4, [r0, #148]	@ 0x94
   16208:	e1a03105 	lsl	r3, r5, #2
   1620c:	e2832098 	add	r2, r3, #152	@ 0x98
   16210:	e3a03001 	mov	r3, #1
   16214:	e1a03613 	lsl	r3, r3, r6
   16218:	e7803002 	str	r3, [r0, r2]
   1621c:	e3a00096 	mov	r0, #150	@ 0x96
   16220:	ebffffcd 	bl	1615c <utils_delay>
   16224:	e3a00001 	mov	r0, #1
   16228:	eb00001b 	bl	1629c <devices_AddressGet>
   1622c:	e3a03000 	mov	r3, #0
   16230:	e5803094 	str	r3, [r0, #148]	@ 0x94
   16234:	e7803002 	str	r3, [r0, r2]
   16238:	e3a00000 	mov	r0, #0
   1623c:	e8bd8070 	pop	{r4, r5, r6, pc}

00016240 <gpio_PinSet>:
   16240:	e3500035 	cmp	r0, #53	@ 0x35
   16244:	83e00000 	mvnhi	r0, #0
   16248:	812fff1e 	bxhi	lr
   1624c:	e92d4030 	push	{r4, r5, lr}
   16250:	e2014001 	and	r4, r1, #1
   16254:	e3a01020 	mov	r1, #32
   16258:	ebffff6c 	bl	16010 <math_u32_divide>
   1625c:	e1a00100 	lsl	r0, r0, #2
   16260:	e3a03001 	mov	r3, #1
   16264:	e1a05113 	lsl	r5, r3, r1
   16268:	e3540000 	cmp	r4, #0
   1626c:	02802028 	addeq	r2, r0, #40	@ 0x28
   16270:	1280201c 	addne	r2, r0, #28
   16274:	e3a00001 	mov	r0, #1
   16278:	eb000007 	bl	1629c <devices_AddressGet>
   1627c:	e7903002 	ldr	r3, [r0, r2]
   16280:	e1833005 	orr	r3, r3, r5
   16284:	e7803002 	str	r3, [r0, r2]
   16288:	e8bd4030 	pop	{r4, r5, lr}

0001628c <system_CoreFreqGet>:
   1628c:	e59f02fc 	ldr	r0, [pc, #764]	@ 16590 <arm_timer_irq_clear+0x14>
   16290:	e5900000 	ldr	r0, [r0]
   16294:	e12fff1e 	bx	lr

00016298 <system_CoreFreq>:
   16298:	00298740 	.word	0x00298740

0001629c <devices_AddressGet>:
   1629c:	e59f12f0 	ldr	r1, [pc, #752]	@ 16594 <arm_timer_irq_clear+0x18>
   162a0:	e7910100 	ldr	r0, [r1, r0, lsl #2]
   162a4:	e12fff1e 	bx	lr

000162a8 <auxiliary_Enable>:
   162a8:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
   162ac:	e2002007 	and	r2, r0, #7
   162b0:	e3a00002 	mov	r0, #2
   162b4:	ebfffff8 	bl	1629c <devices_AddressGet>
   162b8:	e5901004 	ldr	r1, [r0, #4]
   162bc:	e1811002 	orr	r1, r1, r2
   162c0:	e5801004 	str	r1, [r0, #4]
   162c4:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

000162c8 <uart0_Init>:
   162c8:	e59f32c8 	ldr	r3, [pc, #712]	@ 16598 <arm_timer_irq_clear+0x1c>
   162cc:	e5933000 	ldr	r3, [r3]
   162d0:	e1500003 	cmp	r0, r3
   162d4:	93510003 	cmpls	r1, #3
   162d8:	812fff1e 	bxhi	lr
   162dc:	e92d4070 	push	{r4, r5, r6, lr}
   162e0:	e1a04000 	mov	r4, r0
   162e4:	e1a05001 	mov	r5, r1
   162e8:	e1a06002 	mov	r6, r2
   162ec:	e3a0000e 	mov	r0, #14
   162f0:	e3a01002 	mov	r1, #2
   162f4:	ebffff9b 	bl	16168 <gpio_ModeSet>
   162f8:	e3a0000f 	mov	r0, #15
   162fc:	e3a01002 	mov	r1, #2
   16300:	ebffff98 	bl	16168 <gpio_ModeSet>
   16304:	e3a0000e 	mov	r0, #14
   16308:	e3a01000 	mov	r1, #0
   1630c:	ebffffad 	bl	161c8 <gpio_pud_mode_write>
   16310:	e3a0000f 	mov	r0, #15
   16314:	e3a01000 	mov	r1, #0
   16318:	ebffffaa 	bl	161c8 <gpio_pud_mode_write>
   1631c:	ebffffda 	bl	1628c <system_CoreFreqGet>
   16320:	e1a01184 	lsl	r1, r4, #3
   16324:	ebffff39 	bl	16010 <math_u32_divide>
   16328:	e2400001 	sub	r0, r0, #1
   1632c:	e1a03000 	mov	r3, r0
   16330:	e3a00001 	mov	r0, #1
   16334:	ebffffdb 	bl	162a8 <auxiliary_Enable>
   16338:	e3a02000 	mov	r2, #0
   1633c:	e5802044 	str	r2, [r0, #68]	@ 0x44
   16340:	e3a02000 	mov	r2, #0
   16344:	e5802060 	str	r2, [r0, #96]	@ 0x60
   16348:	e580504c 	str	r5, [r0, #76]	@ 0x4c
   1634c:	e3a02000 	mov	r2, #0
   16350:	e5802050 	str	r2, [r0, #80]	@ 0x50
   16354:	e2062003 	and	r2, r6, #3
   16358:	e5802048 	str	r2, [r0, #72]	@ 0x48
   1635c:	e5803068 	str	r3, [r0, #104]	@ 0x68
   16360:	e3a02003 	mov	r2, #3
   16364:	e5802060 	str	r2, [r0, #96]	@ 0x60
   16368:	e8bd8070 	pop	{r4, r5, r6, pc}

0001636c <uart0_read>:
   1636c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
   16370:	e3a00002 	mov	r0, #2
   16374:	ebffffc8 	bl	1629c <devices_AddressGet>
   16378:	e5901054 	ldr	r1, [r0, #84]	@ 0x54
   1637c:	e3110001 	tst	r1, #1
   16380:	0afffffc 	beq	16378 <uart0_read+0xc>
   16384:	e5900040 	ldr	r0, [r0, #64]	@ 0x40
   16388:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0001638c <uart0_write>:
   1638c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
   16390:	e20020ff 	and	r2, r0, #255	@ 0xff
   16394:	e3a00002 	mov	r0, #2
   16398:	ebffffbf 	bl	1629c <devices_AddressGet>
   1639c:	e5901054 	ldr	r1, [r0, #84]	@ 0x54
   163a0:	e3110020 	tst	r1, #32
   163a4:	0afffffc 	beq	1639c <uart0_write+0x10>
   163a8:	e5802040 	str	r2, [r0, #64]	@ 0x40
   163ac:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

000163b0 <uart0_write_bytes>:
   163b0:	e92d4030 	push	{r4, r5, lr}
   163b4:	e1a03000 	mov	r3, r0
   163b8:	e1a04001 	mov	r4, r1
   163bc:	e3a05000 	mov	r5, #0
   163c0:	e1530005 	cmp	r3, r5
   163c4:	0a000007 	beq	163e8 <uart0_write_bytes+0x38>
   163c8:	e1550004 	cmp	r5, r4
   163cc:	2a000005 	bcs	163e8 <uart0_write_bytes+0x38>
   163d0:	e7d30005 	ldrb	r0, [r3, r5]
   163d4:	e3500000 	cmp	r0, #0
   163d8:	0a000002 	beq	163e8 <uart0_write_bytes+0x38>
   163dc:	ebffffea 	bl	1638c <uart0_write>
   163e0:	e2855001 	add	r5, r5, #1
   163e4:	eafffff7 	b	163c8 <uart0_write_bytes+0x18>
   163e8:	e8bd8030 	pop	{r4, r5, pc}

000163ec <uart0_u32_write>:
   163ec:	e3510010 	cmp	r1, #16
   163f0:	812fff1e 	bxhi	lr
   163f4:	e92d4070 	push	{r4, r5, r6, lr}
   163f8:	e1a04000 	mov	r4, r0
   163fc:	e1a05001 	mov	r5, r1
   16400:	e59f6194 	ldr	r6, [pc, #404]	@ 1659c <arm_timer_irq_clear+0x20>
   16404:	e3a00000 	mov	r0, #0
   16408:	e4c60001 	strb	r0, [r6], #1
   1640c:	e1a00004 	mov	r0, r4
   16410:	e1a01005 	mov	r1, r5
   16414:	ebfffefd 	bl	16010 <math_u32_divide>
   16418:	e1a04000 	mov	r4, r0
   1641c:	e1a00001 	mov	r0, r1
   16420:	e3500009 	cmp	r0, #9
   16424:	82800007 	addhi	r0, r0, #7
   16428:	e2800030 	add	r0, r0, #48	@ 0x30
   1642c:	e4c60001 	strb	r0, [r6], #1
   16430:	e3340000 	teq	r4, #0
   16434:	1afffff4 	bne	1640c <uart0_u32_write+0x20>
   16438:	e5760001 	ldrb	r0, [r6, #-1]!
   1643c:	e3500000 	cmp	r0, #0
   16440:	1bffffd1 	blne	1638c <uart0_write>
   16444:	1afffffb 	bne	16438 <uart0_u32_write+0x4c>
   16448:	e8bd8070 	pop	{r4, r5, r6, pc}

0001644c <uart0_s32_write>:
   1644c:	e92d4070 	push	{r4, r5, r6, lr}
   16450:	e1a04000 	mov	r4, r0
   16454:	e3500000 	cmp	r0, #0
   16458:	b3a0002d 	movlt	r0, #45	@ 0x2d
   1645c:	ebffffca 	bl	1638c <uart0_write>
   16460:	e59f6134 	ldr	r6, [pc, #308]	@ 1659c <arm_timer_irq_clear+0x20>
   16464:	e3a00000 	mov	r0, #0
   16468:	e4c60001 	strb	r0, [r6], #1
   1646c:	e1a00004 	mov	r0, r4
   16470:	e3a0100a 	mov	r1, #10
   16474:	ebffff0e 	bl	160b4 <math_s32_divide>
   16478:	e1a04000 	mov	r4, r0
   1647c:	e1a00001 	mov	r0, r1
   16480:	ebfffede 	bl	16000 <math_s32_abs>
   16484:	e2800030 	add	r0, r0, #48	@ 0x30
   16488:	e20000ff 	and	r0, r0, #255	@ 0xff
   1648c:	e4c60001 	strb	r0, [r6], #1
   16490:	e3340000 	teq	r4, #0
   16494:	1afffff4 	bne	1646c <uart0_s32_write+0x20>
   16498:	e5760001 	ldrb	r0, [r6, #-1]!
   1649c:	e3500000 	cmp	r0, #0
   164a0:	1bffffb9 	blne	1638c <uart0_write>
   164a4:	1afffffb 	bne	16498 <uart0_s32_write+0x4c>
   164a8:	e8bd8070 	pop	{r4, r5, r6, pc}

000164ac <mu_MaxBaudRate>:
   164ac:	01dcd650 	.word	0x01dcd650

000164b0 <interrupt_reset>:
   164b0:	eafffffe 	b	164b0 <interrupt_reset>

000164b4 <interrupt_unused>:
   164b4:	eafffffe 	b	164b4 <interrupt_unused>

000164b8 <interrupt_undefined>:
   164b8:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   164bc:	e14f0000 	mrs	r0, SPSR
   164c0:	e52d0004 	push	{r0}		@ (str r0, [sp, #-4]!)
   164c4:	e59f00d4 	ldr	r0, [pc, #212]	@ 165a0 <arm_timer_irq_clear+0x24>
   164c8:	e3a01017 	mov	r1, #23
   164cc:	ebffffb7 	bl	163b0 <uart0_write_bytes>
   164d0:	e49d0004 	pop	{r0}		@ (ldr r0, [sp], #4)
   164d4:	e16ff000 	msr	SPSR_fsxc, r0
   164d8:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   164dc:	e25ef004 	subs	pc, lr, #4

000164e0 <interrupt_software>:
   164e0:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   164e4:	e59f00b8 	ldr	r0, [pc, #184]	@ 165a4 <arm_timer_irq_clear+0x28>
   164e8:	e3a01014 	mov	r1, #20
   164ec:	ebffffaf 	bl	163b0 <uart0_write_bytes>
   164f0:	e8bd9fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

000164f4 <interrupt_prefetch_abort>:
   164f4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   164f8:	e14f0000 	mrs	r0, SPSR
   164fc:	e52d0004 	push	{r0}		@ (str r0, [sp, #-4]!)
   16500:	e59f00a0 	ldr	r0, [pc, #160]	@ 165a8 <arm_timer_irq_clear+0x2c>
   16504:	e3a01016 	mov	r1, #22
   16508:	ebffffa8 	bl	163b0 <uart0_write_bytes>
   1650c:	e49d0004 	pop	{r0}		@ (ldr r0, [sp], #4)
   16510:	e16ff000 	msr	SPSR_fsxc, r0
   16514:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   16518:	e25ef004 	subs	pc, lr, #4

0001651c <interrupt_data_abort>:
   1651c:	eafffffe 	b	1651c <interrupt_data_abort>

00016520 <interrupt_request>:
   16520:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   16524:	e14f0000 	mrs	r0, SPSR
   16528:	e52d0004 	push	{r0}		@ (str r0, [sp, #-4]!)
   1652c:	e59f0078 	ldr	r0, [pc, #120]	@ 165ac <arm_timer_irq_clear+0x30>
   16530:	e3a0100d 	mov	r1, #13
   16534:	ebffff9d 	bl	163b0 <uart0_write_bytes>
   16538:	eb00000f 	bl	1657c <arm_timer_irq_clear>
   1653c:	e49d0004 	pop	{r0}		@ (ldr r0, [sp], #4)
   16540:	e16ff000 	msr	SPSR_fsxc, r0
   16544:	e8bd5fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   16548:	e25ef004 	subs	pc, lr, #4

0001654c <interrupt_fast_request>:
   1654c:	eafffffe 	b	1654c <interrupt_fast_request>

00016550 <arm_timer_init>:
   16550:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
   16554:	e59f0054 	ldr	r0, [pc, #84]	@ 165b0 <arm_timer_irq_clear+0x34>
   16558:	e3a01b03 	mov	r1, #3072	@ 0xc00
   1655c:	e5801000 	str	r1, [r0]
   16560:	e3a0108a 	mov	r1, #138	@ 0x8a
   16564:	e5801008 	str	r1, [r0, #8]
   16568:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0001656c <arm_timer_value_read>:
   1656c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
   16570:	e59f0038 	ldr	r0, [pc, #56]	@ 165b0 <arm_timer_irq_clear+0x34>
   16574:	e5900004 	ldr	r0, [r0, #4]
   16578:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

0001657c <arm_timer_irq_clear>:
   1657c:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
   16580:	e59f0028 	ldr	r0, [pc, #40]	@ 165b0 <arm_timer_irq_clear+0x34>
   16584:	e3a01001 	mov	r1, #1
   16588:	e580100c 	str	r1, [r0, #12]
   1658c:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)
   16590:	00016298 	.word	0x00016298
   16594:	00017004 	.word	0x00017004
   16598:	000164ac 	.word	0x000164ac
   1659c:	00017010 	.word	0x00017010
   165a0:	00017030 	.word	0x00017030
   165a4:	00017048 	.word	0x00017048
   165a8:	0001705c 	.word	0x0001705c
   165ac:	00017072 	.word	0x00017072
   165b0:	2000b400 	.word	0x2000b400
